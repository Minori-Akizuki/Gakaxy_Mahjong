{"version":3,"file":"js/app.8fbfc0bd.js","mappings":"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","sources":["webpack://galaxy_mahjong/./src/App.vue?cad4","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/galaxy_mahjong.vue?f5e8","webpack://galaxy_mahjong/./src/lib/util/util.ts","webpack://galaxy_mahjong/./src/lib/mahjong/mahjong_tile.ts","webpack://galaxy_mahjong/./src/lib/mahjong/parse_tile.ts","webpack://galaxy_mahjong/./src/lib/mahjong/tile_map.ts","webpack://galaxy_mahjong/./src/lib/mahjong/galaxy_tile_parser.ts","webpack://galaxy_mahjong/./src/lib/mahjong/mianzi.ts","webpack://galaxy_mahjong/./src/lib/mahjong/rule_base.ts","webpack://galaxy_mahjong/./src/lib/mahjong/galaxy_rule.ts","webpack://galaxy_mahjong/./src/store/mutationType.ts","webpack://galaxy_mahjong/./src/store/store_enum.ts","webpack://galaxy_mahjong/./src/store/store.ts","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/solve_hand_button.vue?9c4a","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/solve_hand_button.vue?130a","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/solve_hand_button.vue","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/solve_hule_tile_button.vue?49c6","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/solve_hule_tile_button.vue?a2cc","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/solve_hule_tile_button.vue","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/hand_display.vue?5450","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/display_hidden_hand.vue?eb7d","webpack://galaxy_mahjong/./src/components/tile_image.vue?462e","webpack://galaxy_mahjong/./src/components/tile_image.vue?0025","webpack://galaxy_mahjong/./src/components/tile_image.vue","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/display_hidden_hand.vue?d161","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/display_hidden_hand.vue","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/display_opend_mianzis.vue?c969","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/display_opend_mianzis.vue?666d","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/display_opend_mianzis.vue","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/select_add_mode.vue?5be7","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/select_add_mode.vue?7dda","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/select_add_mode.vue","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/hand_display.vue?6d69","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/hand_display.vue","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/pickup_tile_area.vue?9bef","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/pickup_tile_area.vue?cfab","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/pickup_tile_area.vue","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/solved_hand_view.vue?8a93","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/solved_hand_combination_display.vue?754b","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/solved_hand_combination_display.vue?21cd","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/solved_hand_combination_display.vue","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/solved_hule_tile_display.vue?2fe7","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/display_mianzi.vue?83fb","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/display_mianzi.vue?2fca","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/display_mianzi.vue","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/solved_hule_tile_display.vue?3be3","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/solved_hule_tile_display.vue","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/solved_hand_view.vue?5bf0","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/solved_hand_view.vue","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/galaxy_mahjong.vue?2b5c","webpack://galaxy_mahjong/./src/components/galaxy_mahjong/galaxy_mahjong.vue","webpack://galaxy_mahjong/./src/App.vue?847a","webpack://galaxy_mahjong/./src/App.vue","webpack://galaxy_mahjong/./src/main.ts","webpack://galaxy_mahjong/./src/assets/mahjong_tile/ sync ^\\.\\/.*$","webpack://galaxy_mahjong/webpack/bootstrap","webpack://galaxy_mahjong/webpack/runtime/chunk loaded","webpack://galaxy_mahjong/webpack/runtime/compat get default export","webpack://galaxy_mahjong/webpack/runtime/define property getters","webpack://galaxy_mahjong/webpack/runtime/get javascript chunk filename","webpack://galaxy_mahjong/webpack/runtime/global","webpack://galaxy_mahjong/webpack/runtime/hasOwnProperty shorthand","webpack://galaxy_mahjong/webpack/runtime/make namespace object","webpack://galaxy_mahjong/webpack/runtime/publicPath","webpack://galaxy_mahjong/webpack/runtime/jsonp chunk loading","webpack://galaxy_mahjong/webpack/startup"],"sourcesContent":["import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_galaxy_mahjong = _resolveComponent(\"galaxy-mahjong\")!\n\n  return (_openBlock(), _createBlock(_component_galaxy_mahjong))\n}","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"銀河麻雀\", -1)\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", null, \"- Galaxy Mahjong - (β)\", -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", { style: {\"color\":\"dodgerblue\"} }, \"Be Mahjalien you TOO!\", -1)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"readme\" }, [\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"◆下の牌一覧をクリック(タップ)して手牌を追加できます\"),\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"◆上の牌をクリック(タップ)すると削除できます\"),\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"◆上がり牌検索結果は牌一覧のさらに下に表示されます\"),\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"◆銀河牌が多いと10秒ぐらいかかります。気長に待ってください\")\n], -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"クレジット\", -1)\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"ul\", null, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, [\n    /*#__PURE__*/_createTextVNode(\"元ネタ: \"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      href: \"https://youtu.be/IDaKM7eU7zE\",\n      target: \"_blank\"\n    }, \"麻雀星人からの挑戦状!?銀河麻雀！\")\n  ]),\n  /*#__PURE__*/_createElementVNode(\"li\", null, [\n    /*#__PURE__*/_createTextVNode(\"牌画像: \"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      href: \"https://majandofu.com/mahjong-images\",\n      target: \"_blank\"\n    }, \"豆腐麻雀\")\n  ]),\n  /*#__PURE__*/_createElementVNode(\"li\", null, [\n    /*#__PURE__*/_createTextVNode(\"ページ作者 : \"),\n    /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://twitter.com/Real_analysis\" }, \"じつかいせき\")\n  ])\n], -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_solve_hand_button = _resolveComponent(\"solve-hand-button\")!\n  const _component_solve_hule_tile_button = _resolveComponent(\"solve-hule-tile-button\")!\n  const _component_hand_display = _resolveComponent(\"hand-display\")!\n  const _component_pickup_tile_area = _resolveComponent(\"pickup-tile-area\")!\n  const _component_solved_hand_view = _resolveComponent(\"solved-hand-view\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _hoisted_1,\n    _hoisted_2,\n    _hoisted_3,\n    _hoisted_4,\n    _createElementVNode(\"div\", null, [\n      _createVNode(_component_solve_hand_button),\n      _createVNode(_component_solve_hule_tile_button)\n    ]),\n    _createVNode(_component_hand_display),\n    _createVNode(_component_pickup_tile_area),\n    _hoisted_5,\n    _createVNode(_component_solved_hand_view),\n    _hoisted_6,\n    _hoisted_7\n  ]))\n}","export class _ {\r\n  /**\r\n   * 先頭から比較関数を使って順番に要素を比べ、全てが true であれば true を返却する\r\n   * @param f 比較関数\r\n   * @param arr 配列\r\n   * @returns 比較結果\r\n   */\r\n  static everyPairFromHeadWith<T> (f:(current:T, next:T) => boolean, arr:T[]):boolean {\r\n    const pairs = _.makePairsFromHead(arr)\r\n    return pairs.every((p) => f(p[0], p[1]))\r\n  }\r\n\r\n  /**\r\n   * 与えられた配列から得られる全てのペアを比較関数で比較し、\r\n   * 全てが true であった場合に true を返却する。\r\n   * 比較は元々配列に格納されている順番で行われる。\r\n   * @param f 比較関数\r\n   * @param arr 配列\r\n   * @returns 比較結果\r\n   */\r\n  static everyPairAllPairWith<T> (f:(a:T, b:T) => boolean, arr:T[]):boolean {\r\n    const pairs = _.makeAllPairsFromHead(arr)\r\n    return pairs.every((p) => f(p[0], p[1]))\r\n  }\r\n\r\n  /**\r\n   * 配列内の要素から順序性の保たれた全てのペアを作成する。\r\n   * [1, 2, 3, 4] -> [ [ 1, 2 ], [ 1, 3 ], [ 1, 4 ], [ 2, 3 ], [ 2, 4 ], [ 3, 4 ] ]\r\n   * @param arr 配列\r\n   * @returns 配列の要素を全てペアにしたものの配列\r\n   */\r\n  static makeAllPairsFromHead<T> (arr:T[]):[T, T][] {\r\n    if (arr.length <= 1) {\r\n      return []\r\n    }\r\n    const pairs: [T, T][] = []\r\n    for (let indexA = 0; indexA < arr.length - 1; indexA++) {\r\n      for (let indexB = indexA + 1; indexB < arr.length; indexB++) {\r\n        pairs.push([arr[indexA], arr[indexB]])\r\n      }\r\n    }\r\n    return pairs\r\n  }\r\n\r\n  /**\r\n   * 先頭から順番に2つの組を作成する。[1, 2, 3] -> [[1, 2], [2, 3]]\r\n   * @param arr 配列\r\n   * @returns 配列を先頭からペアにしたもの\r\n   */\r\n  static makePairsFromHead<T> (arr:T[]):[T, T][] {\r\n    const pairs: [T, T][] = []\r\n    for (let index = 0; index < arr.length - 1; index++) {\r\n      pairs.push([arr[index], arr[index + 1]])\r\n    }\r\n    return pairs\r\n  }\r\n\r\n  /**\r\n   * 与えられた2つの配列からそれぞれ要素を組み合わせた全てのペアを生成する。\r\n   * @param arrT 配列\r\n   * @param arrS 配列\r\n   * @returns ペア配列\r\n   */\r\n  static pairOf<T, S> (arrT:T[], arrS:S[]):[T, S][] {\r\n    const pairs:[T, S][] = []\r\n    arrT.forEach((t) => {\r\n      arrS.forEach((s) => {\r\n        pairs.push([t, s])\r\n      })\r\n    })\r\n    return pairs\r\n  }\r\n\r\n  /**\r\n   * 配列の要素について [一つの要素, 残りの要素] である全ての結果を返します\r\n   * @param arr 配列\r\n   * @returns 一つだけ抽出された要素と残りの配列の組の配列\r\n   */\r\n  static extractAllOne<T> (arr:T[]):[T, T[]][] {\r\n    return arr.map((v, i, arr) => {\r\n      const _arr:T[] = arr.concat()\r\n      _arr.splice(i, 1)\r\n      return [v, _arr]\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 配列を比較関数で比較し要素の数、順番が一致した時に true を返却します\r\n   * @param arrA 配列\r\n   * @param arrB 配列\r\n   * @param compare 要素に対する比較関数( @see Array.prototype.sort() )\r\n   * @returns 配列が一致しているか\r\n   */\r\n  static equalArray<T> (arrA:T[], arrB:T[], compare:(a:T, b:T) => number):boolean {\r\n    if (arrA.length !== arrB.length) {\r\n      return false\r\n    }\r\n    let ret = true\r\n    arrA.forEach((a, i) => {\r\n      ret = ret && (compare(a, arrB[i]) === 0)\r\n    })\r\n    return ret\r\n  }\r\n\r\n  /**\r\n   * 二つの配列が同一要素で構成されているかを比較する。配列の中身は順不同。\r\n   * equalArray(as.sort(compare), bs.sort(compare), compare) と同一の結果を返すがイミュータブルである。\r\n   * @param arrA 配列\r\n   * @param arrB 配列\r\n   * @param compare 要素に対する比較関数( @see Array.prototype.sort() )\r\n   * @returns 配列の中身が一致しているか\r\n   */\r\n  static equalSetArray<T> (arrA:T[], arrB:T[], compare:(a:T, b:T) => number):boolean {\r\n    const _arrA = [...arrA].sort(compare)\r\n    const _arrB = [...arrB].sort(compare)\r\n    return this.equalArray(_arrA, _arrB, compare)\r\n  }\r\n\r\n  /**\r\n   * 両者を辞書式に比較し、その比較結果を返す\r\n   * @param arrA 配列A\r\n   * @param arrB 配列B\r\n   * @param compare 要素に対する比較対象 ( @see Array.prototype.sort() )\r\n   * @returns 比較結果、A の方が小さければ負の数\r\n   */\r\n  static compareArray<T> (arrA:T[], arrB:T[], compare:(a:T, b:T) => number):number {\r\n    for (let i = 0; i < arrA.length; i++) {\r\n      if (i >= arrB.length) {\r\n        return 1\r\n      }\r\n      const compared = compare(arrA[i], arrB[i])\r\n      if (compared !== 0) {\r\n        return compared\r\n      }\r\n    }\r\n    if (arrA.length < arrB.length) {\r\n      return -1\r\n    }\r\n    return 0\r\n  }\r\n\r\n  /**\r\n   * 配列から n 個抽出したパターンを全て列挙する。\r\n   * 抽出したものは compare によって ソートされ同一の物が抽出されたパターンは排除される\r\n   * @param arr 配列\r\n   * @param n 抽出個数\r\n   * @param compare ソートのための比較関数\r\n   * @returns [[抽出対象][配列の残り]]\r\n   */\r\n  static extractAllN<T> (\r\n    arr:T[],\r\n    n:number,\r\n    compare:(a:T, b:T) => number\r\n  ):[T[], T[]][] {\r\n    return this._extractAllN(arr, n, compare, 0)\r\n  }\r\n\r\n  /**\r\n   * extractAllN の 被ラップ関数\r\n   * @param arr 配列\r\n   * @param n なんこ取ってくるか\r\n   * @param compare 比較関数\r\n   * @param startIndex: 取得開始インデックス\r\n   */\r\n  static _extractAllN<T> (\r\n    arr:T[],\r\n    n:number,\r\n    compare:(a:T, b:T) => number,\r\n    startIndex:number\r\n  ):[T[], T[]][] {\r\n    if (n === 0) {\r\n      return [[[], [...arr]]]\r\n    }\r\n    const ret:[T[], T[]][] = []\r\n    for (let index = startIndex; index <= arr.length - n; index++) {\r\n      const _arr = [...arr]\r\n      const takenIs = _arr.splice(index, 1)\r\n      const takenP = this._extractAllN([..._arr], n - 1, compare, index)\r\n      takenP.forEach(([taken, remaingArr]) => {\r\n        const _taken:T[] = takenIs.concat(taken)\r\n        if (ret.every(\r\n          ([retTaken, remain]) => !(_.compareArray(retTaken.sort(compare), _taken.sort(compare), compare) === 0)\r\n        )) {\r\n          ret.push([_taken, remaingArr])\r\n        }\r\n      })\r\n    }\r\n    return ret\r\n  }\r\n\r\n  /**\r\n   * 各々の配列の一つの要素を抜き取った全ての組合せを列挙する\r\n   * @param arr 配列の配列\r\n   * @returns 各配列から1つ要素を選んだ場合の全ての組合せの列挙\r\n   */\r\n  static formation<T> (arr:T[][]):T[][] {\r\n    const _arr:T[][] = []\r\n    arr.forEach((p) => {\r\n      _arr.push([...p])\r\n    })\r\n    const firstMaterials:T[][] = (_arr.shift() || []).map(m => [m])\r\n    return this._formation(firstMaterials, _arr)\r\n  }\r\n\r\n  /**\r\n   * formation の被ラップ関数\r\n   * @param conbined 抽出済の要素\r\n   * @param arr 残りの要素\r\n   */\r\n  private static _formation<T> (conbined:T[][], arr:T[][]):T[][] {\r\n    if (arr.length === 0) {\r\n      return conbined\r\n    }\r\n    const _retConbined:T[][] = []\r\n    const arrHead:T[] = arr.shift() || []\r\n    conbined.forEach(cs => {\r\n      arrHead.forEach(hm => {\r\n        const _cs:T[] = [...cs]\r\n        _cs.push(hm)\r\n        _retConbined.push(_cs)\r\n      })\r\n    })\r\n    return this._formation(_retConbined, arr)\r\n  }\r\n\r\n  /**\r\n   * arr から equal に基づき最初に一致した m を抜き出した配列を返却します。\r\n   * m を発見できなかった時は変化のない配列が返されます。\r\n   * arr 自体は変更されません。\r\n   * @param arr 配列\r\n   * @param m 対象\r\n   * @param equal 比較関数\r\n   * @returns 抜き出した後の arr\r\n   */\r\n  static extract<T> (arr:T[], m:T, equal:(a:T, b:T) => boolean):T[] {\r\n    const _arr = [...arr]\r\n    const index = _arr.findIndex((f) => equal(f, m))\r\n    if (index === -1) {\r\n      return _arr\r\n    }\r\n    _arr.splice(index, 1)\r\n    return _arr\r\n  }\r\n\r\n  /**\r\n   * arr から equal に基づき ms と一つずつ比較し、それらを抜き出した配列を返却します。\r\n   * ms の中の要素を発見できなかった時は特に変化は起こりません。\r\n   * arr 自体は変更されません。\r\n   * @param arr 配列\r\n   * @param ms 抜き出す要素の配列\r\n   * @param equal 比較関数\r\n   * @returns 抜き出した後の arr\r\n   */\r\n  static extractMultiple<T> (arr:T[], ms:T[], equal:(a:T, b:T) => boolean):T[] {\r\n    let _arr = [...arr]\r\n    ms.forEach(m => {\r\n      _arr = this.extract(_arr, m, equal)\r\n    })\r\n    return _arr\r\n  }\r\n\r\n  /**\r\n   * 配列をシャッフルする。元の配列は変更されない。\r\n   * @param arr 配列\r\n   * @returns シャッフルされた配列\r\n   */\r\n  static shuffleArr<T> (arr:T[]):T[] {\r\n    const _arr = [...arr]\r\n    let out:T[] = []\r\n    for (let index = _arr.length; index >= 0; index--) {\r\n      const randomIndex = Math.floor(Math.random() * (index + 1))\r\n      const s = _arr.splice(randomIndex, 1)\r\n      out = out.concat(s)\r\n    }\r\n    return out\r\n  }\r\n\r\n  /**\r\n   * 要素が配列に含まれているかどうかを判定する\r\n   * @param arr 配列\r\n   * @param a 要素\r\n   * @param equal 等価性\r\n   * @returns 含まれているか\r\n   */\r\n  static isContained<T> (arr:T[], a:T, equal:(arg1:T, arg2:T) => boolean):boolean {\r\n    return (!(arr.findIndex(x => equal(x, a)) === -1))\r\n  }\r\n\r\n  /**\r\n   * 配列から重複要素を除いた配列を生成する\r\n   * @param arr 配列\r\n   * @param compare 比較関数\r\n   * @returns ソートされ重複要素が除かれた配列\r\n   */\r\n  static uniq<T> (arr:T[], compare:(ta:T, tb:T) => number):T[] {\r\n    const ret = [...arr]\r\n    ret.sort(compare)\r\n    for (let index = 0; index < ret.length - 1;) {\r\n      if (compare(ret[index], ret[index + 1]) === 0) {\r\n        ret.splice(index, 1)\r\n      } else {\r\n        index++\r\n      }\r\n    }\r\n    return ret\r\n  }\r\n}\r\n","/**\r\n * 牌の色、三元牌と風牌は別種にしている\r\n */\r\nexport enum TileColor {\r\n  /** 萬子 */\r\n  'wanzi',\r\n  /** 筒子 */\r\n  'tongzi',\r\n  /** 索子 */\r\n  'siozi',\r\n  /** 風牌 */\r\n  'feng',\r\n  /** 三元牌 */\r\n  'sanyuan',\r\n  /** 花 */\r\n  'flower'\r\n}\r\n\r\n/**\r\n * 麻雀牌の種別を示すクラス\r\n */\r\nexport class MahjongTile {\r\n  readonly color: TileColor\r\n  readonly number: number\r\n  readonly option: {[name:string]: boolean}\r\n  public constructor (color:TileColor, number:number, option:{[name:string]: boolean}) {\r\n    this.color = color\r\n    this.number = number\r\n    this.option = option\r\n  }\r\n}\r\n\r\nMahjongTile.prototype.toString = function doToString () {\r\n  if (this === undefined) {\r\n    return 'undefined'\r\n  }\r\n  if (this.color === TileColor.flower) {\r\n    // 花牌の場合\r\n    return 'f'\r\n  }\r\n  let str = ''\r\n  if (this.color === TileColor.feng) {\r\n    // 風牌の場合\r\n    str += ['w', 's', 'e', 'n'][this.number - 1]\r\n  } else if (this.color === TileColor.sanyuan) {\r\n    // 三元牌の場合\r\n    str += ['b', 'l', 'h'][this.number - 1]\r\n  } else {\r\n    // 数牌の場合\r\n    str += this.number.toString() + ['w', 'p', 's'][this.color]\r\n  }\r\n  for (const optionName in this.option) {\r\n    if (this.option[optionName]) {\r\n      str += optionName.charAt(2).toLowerCase()\r\n    }\r\n  }\r\n  return str\r\n}\r\n","import { MahjongTile, TileColor } from './mahjong_tile'\r\n\r\nexport interface MahjongTileParserBase {\r\n  parseTileFromString(str:string):MahjongTile\r\n  parseTilesFromString(str:string):MahjongTile[]\r\n}\r\n\r\n/**\r\n * 文字列から牌を生成するパーサー。\r\n * 継承先のクラスはシングルトンで提供されるのが前提のため、\r\n * そのような実装をすること。\r\n */\r\nexport class MahjongTileParserBase {\r\n  protected regexString:string\r\n\r\n  protected constructor (\r\n    readonly numberdTileMap:{[name:string]: {color:TileColor, maxNumber:number}},\r\n    readonly symboledTileMap:{[name:string]: {color:TileColor, number:number}},\r\n    readonly optionMap:{[name:string]: string}) {\r\n    // /^(([1-9][wps])|[newshlb])g?$/ みたいなのを作りたい\r\n    const numberdColorChars = Object.keys(numberdTileMap).join()\r\n    const symboledColorChars = Object.keys(symboledTileMap).join()\r\n    const optionChars = Object.keys(optionMap).join()\r\n    this.regexString = `(((\\\\d+?)([${numberdColorChars}]))|([${symboledColorChars}]))([${optionChars}]*?)?`\r\n    /*\r\n    数牌 : [全、牌種、種類、数字、色、*、  オプション]\r\n    字牌 : [全、牌種、*、   *、   *、種類、オプション]\r\n    */\r\n  }\r\n\r\n  /**\r\n   * 一つの麻雀牌をパーズする\r\n   * @param tileStr 一つの牌を示す文字列\r\n   * @returns 麻雀牌\r\n   */\r\n  public parseTile (tileStr:string):MahjongTile {\r\n    const regex = new RegExp('^' + this.regexString + '$')\r\n    // 牌をパース\r\n    const parseResult = tileStr.match(regex)\r\n    if (!parseResult) {\r\n      throw Error(`parseTile: ${tileStr} is not match Tile string`)\r\n    }\r\n    // オプションの記憶\r\n    const options: {[name:string]: boolean} = {}\r\n    if (parseResult[6]) {\r\n      const optionArr = parseResult[6].split('')\r\n      optionArr.forEach((opt) => {\r\n        const optionName = this.optionMap[opt]\r\n        if (!optionName) {\r\n          // オプション存在の確認\r\n          throw Error(`parseTile: undefined option ${tileStr}`)\r\n        }\r\n        options[optionName] = true\r\n      })\r\n    }\r\n    // 字牌の生成\r\n    if (parseResult[3] === undefined) {\r\n      // 数字が存在しない事を条件とする\r\n      const tileKind = parseResult[1]\r\n      const color = this.symboledTileMap[tileKind].color\r\n      const number = this.symboledTileMap[tileKind].number\r\n      return new MahjongTile(color, number, options)\r\n    }\r\n    // 数牌の生成\r\n    // 色の取得\r\n    const colorChar = parseResult[4]\r\n    const color = this.numberdTileMap[colorChar].color\r\n    if (color === undefined) {\r\n      // 色の存在チェック\r\n      throw Error(`parseTile: undefined color ${tileStr}: ${colorChar}`)\r\n    }\r\n    // 数字の取得\r\n    const number = parseInt(parseResult[3])\r\n    if (!number) {\r\n      // 数字がちゃんとパースできるか (このガードをつけないと型チェックにひっかかる)\r\n      throw Error(`parseTile: can't parse number ${tileStr}`)\r\n    }\r\n    if (number > this.numberdTileMap[colorChar].maxNumber) {\r\n      // 数字の最大値を越えていないかどうか\r\n      // TODO: 東天紅や三麻などの飛び飛びな牌に対応する\r\n      throw Error(`parseTile: can't parse number ${tileStr}`)\r\n    }\r\n    return new MahjongTile(color, number, options)\r\n\r\n    throw Error(`parseTile: unknown error ${tileStr}`)\r\n  }\r\n\r\n  /**\r\n   * 麻雀牌が並んだ文字列をパースする\r\n   * @param tilesStr 牌が並んだ文字列\r\n   * @returns 麻雀牌の列\r\n   */\r\n  public parseTiles (tilesStr:string):MahjongTile[] {\r\n    const regex = new RegExp(this.regexString, 'g')\r\n    const tiles = tilesStr.match(regex)\r\n    if (!tiles) {\r\n      throw Error(`parseTiles: can't parse string ${tilesStr}`)\r\n    }\r\n    return tiles.map((s) => this.parseTile(s))\r\n  }\r\n}\r\n","import { TileColor } from './mahjong_tile'\r\n\r\ninterface NumberdTile {\r\n  color: TileColor\r\n  maxNumber: number\r\n}\r\n\r\ninterface SymboledTile {\r\n  color: TileColor\r\n  number: number\r\n}\r\n\r\ninterface TileMap {\r\n  numberdTileMap: {[name:string]:NumberdTile}\r\n  symboledTileMap: {[name:string]:SymboledTile}\r\n  option: {[name:string]:string}\r\n}\r\n\r\nexport const tileMap:TileMap = {\r\n  numberdTileMap: {\r\n    /** 萬子 (wanzi) */\r\n    w: { color: TileColor.wanzi, maxNumber: 9 },\r\n    /** 筒子 (本来 tonzi だが日本の言いかたに合わせる) */\r\n    p: { color: TileColor.tongzi, maxNumber: 9 },\r\n    /** 索子 (soizi) */\r\n    s: { color: TileColor.siozi, maxNumber: 9 }\r\n  },\r\n  symboledTileMap: {\r\n    /** 東(west) */\r\n    w: { color: TileColor.feng, number: 1 },\r\n    /** 南(south) */\r\n    s: { color: TileColor.feng, number: 2 },\r\n    /** 西(east) */\r\n    e: { color: TileColor.feng, number: 3 },\r\n    /** 北(noath) */\r\n    n: { color: TileColor.feng, number: 4 },\r\n    /** 白(bai ban) */\r\n    b: { color: TileColor.sanyuan, number: 1 },\r\n    /** 發(lu fa) */\r\n    l: { color: TileColor.sanyuan, number: 2 },\r\n    /** 中(hong zhong) */\r\n    h: { color: TileColor.sanyuan, number: 3 }\r\n  },\r\n  option: {}\r\n}\r\n","import { MahjongTileParserBase } from './parse_tile'\r\nimport { tileMap } from './tile_map'\r\n\r\nexport class GalaxyTileParser extends MahjongTileParserBase {\r\n  private static _galaxyTileParserInstance:GalaxyTileParser\r\n  private constructor () {\r\n    super(\r\n      tileMap.numberdTileMap,\r\n      tileMap.symboledTileMap,\r\n      {\r\n        /** 銀河牌マーカー */\r\n        g: 'isGalaxy',\r\n        /** 赤牌 */\r\n        r: 'isRed'\r\n      }\r\n    )\r\n  }\r\n\r\n  static getInstance ():GalaxyTileParser {\r\n    if (!this._galaxyTileParserInstance) {\r\n      this._galaxyTileParserInstance = new GalaxyTileParser()\r\n    }\r\n    return this._galaxyTileParserInstance\r\n  }\r\n}\r\n","import { MahjongTile, TileColor } from './mahjong_tile'\r\n\r\n/**\r\n * 面子の種類、都合上対子と塔子と国士無双も含む\r\n */\r\nexport enum MianziKind {\r\n  /** 順子 */\r\n  'shunzi',\r\n  /** 刻子 */\r\n  'kezi',\r\n  /** 槓子 */\r\n  'kangzi',\r\n  /** 対子 */\r\n  'duizi',\r\n  /** 塔子 */\r\n  'tazi',\r\n  /** 孤立牌 */\r\n  'guli',\r\n  /** 国士形 */\r\n  'shisanyao'\r\n}\r\n\r\nexport enum waitForm {\r\n  /** 両面 */\r\n  'ligngMain',\r\n  /** 嵌張 */\r\n  'quianZhang',\r\n  /** 辺張 */\r\n  'bianShang',\r\n  /** 単騎 */\r\n  'danqi',\r\n  /** 双椪 */\r\n  'shuangPong',\r\n  /** そのほか */\r\n  'others'\r\n}\r\n\r\n/**\r\n * 面子一般を示すインターフェイス、対子も含める。国士の場合は牌以外は適当な値が入る\r\n */\r\nexport interface IMianzi {\r\n  /** 実際の牌 */\r\n  tiles: MahjongTile[]\r\n  /** 面子の種類 */\r\n  kind: MianziKind\r\n  /** 数。順子であれば開始されている数 */\r\n  number: number\r\n  /** 色、牌そのものとは別にとっておく */\r\n  color: TileColor\r\n  /** 鳴いている牌かどうか */\r\n  isOpend: boolean\r\n}\r\n\r\nexport const galaxyMianziToString = (m:IMianzi):string => {\r\n  let str = ''\r\n  str = m.tiles.map(t => t.toString()).join('')\r\n  if (m.kind === MianziKind.shisanyao) {\r\n    return str\r\n  }\r\n  if (m.isOpend) {\r\n    str = '(' + str + ')'\r\n  }\r\n  str += ['(w)', '(p)', '(s)', '', '', ''][m.color]\r\n  if (m.color === TileColor.feng) {\r\n    str += ['(w)', '(s)', '(e)', '(n)'][m.number - 1]\r\n  }\r\n  if (m.color === TileColor.sanyuan) {\r\n    str += ['(b)', '(l)', '(h)'][m.number - 1]\r\n  }\r\n  return str\r\n}\r\n","import deepEqual from 'deep-equal'\r\nimport { _ } from '../util/util'\r\nimport { MahjongTile, TileColor } from './mahjong_tile'\r\nimport { IMianzi, MianziKind, waitForm } from './mianzi'\r\nimport { MahjongTileParserBase } from './parse_tile'\r\nimport { tileMap } from './tile_map'\r\n\r\n/**\r\n * 麻雀ルール、シングルトンで提供される。\r\n * ベースクラスのためかなり手抜き\r\n */\r\nexport class MahjongRule {\r\n  public parser:MahjongTileParserBase\r\n  protected static _instance: MahjongRule\r\n  protected ALL_TILE_TYPE:MahjongTile[]\r\n  protected NORMAL_TILE_TYPE:MahjongTile[]\r\n  protected ALL_TILE_SET:MahjongTile[]\r\n\r\n  protected constructor () {\r\n    this.parser = MahjongTileParser.getInstance()\r\n    this.NORMAL_TILE_TYPE = this.generateNormalTileType()\r\n    this.ALL_TILE_TYPE = this.NORMAL_TILE_TYPE\r\n    this.ALL_TILE_SET = this.provisionAllTileSet(this.NORMAL_TILE_TYPE)\r\n  }\r\n\r\n  /**\r\n   * インスタンスの取得\r\n   * @returns 麻雀ルールクラスのインスタンス\r\n   */\r\n  static getInstance (): MahjongRule {\r\n    if (!this._instance) {\r\n      this._instance = new MahjongRule()\r\n    }\r\n    return this._instance\r\n  }\r\n\r\n  public getAllTiles ():MahjongTile[] {\r\n    return [...this.ALL_TILE_TYPE]\r\n  }\r\n\r\n  public getNormalTiles ():MahjongTile[] {\r\n    return [...this.NORMAL_TILE_TYPE]\r\n  }\r\n\r\n  public getAllTileSet ():MahjongTile[] {\r\n    return [...this.ALL_TILE_SET]\r\n  }\r\n\r\n  /**\r\n   * tile と expect が同じ牌になれるか\r\n   * @param tile 牌\r\n   * @param expect 牌\r\n   */\r\n  public canBeSameTile (tile: MahjongTile, expect: MahjongTile): boolean {\r\n    throw Error('canBeSameTile: Not Implimented')\r\n  }\r\n\r\n  /**\r\n   * nextTile が tile の次の牌になれるか\r\n   * @param tile 牌\r\n   * @param nextTile 次の牌\r\n   */\r\n  public canBeNextTile (tile: MahjongTile, nextTile: MahjongTile): boolean {\r\n    throw Error('canBeNextTile: Not Implimented')\r\n  }\r\n\r\n  /**\r\n   * 渡された牌がドラ表になった時のドラを呈示する\r\n   * @param tile ドラ表\r\n   * @returns ドラになる牌の配列\r\n   */\r\n  public deriveDragon (tile: MahjongTile): MahjongTile[] {\r\n    throw Error('deriveDragon: Not Implimented')\r\n  }\r\n\r\n  /**\r\n   * 与えられた牌(2つから4つ)から面子もしくは雀頭を作る\r\n   * @param tiles 面子にしたい牌\r\n   * @param isOpend 鳴いた牌かどうか\r\n   * @returns 面子となりうるパターンの配列\r\n   */\r\n  public makeMianzi (tiles: MahjongTile[], isOpend: boolean): IMianzi[] {\r\n    throw Error('makeMianzi: Not Implimented')\r\n  }\r\n\r\n  /**\r\n   * 与えられた牌を数字優先で比較する\r\n   * @param tileA 牌\r\n   * @param tileB 牌\r\n   * @returns tileAの方が先であれば負の数、tileBの方が先であれば正の数\r\n   */\r\n  public compareTileByNumber (tileA:MahjongTile, tileB:MahjongTile):number {\r\n    // 数の比較\r\n    const diffNumber = tileA.number - tileB.number\r\n    if (diffNumber !== 0) {\r\n      return diffNumber\r\n    }\r\n    // 色の比較\r\n    const diffColor = tileA.color - tileB.color\r\n    if (diffColor !== 0) {\r\n      return diffColor\r\n    }\r\n    // 両者についている特殊牌属性の種類(赤牌等)を列挙する\r\n    const options = Object.keys({ ...tileA.option, ...tileB.option }).sort()\r\n    // 特殊牌属性のついている牌が後にくるように値を返す\r\n    let optionCompare = 0\r\n    options.forEach(optionName => {\r\n      if (!optionCompare && tileA.option[optionName] && !tileB.option[optionName]) {\r\n        optionCompare = 1\r\n      } else if (!optionCompare && !tileA.option[optionName] && tileB.option[optionName]) {\r\n        optionCompare = -1\r\n      }\r\n    })\r\n    return optionCompare\r\n  }\r\n\r\n  /**\r\n   * 与えられた牌を色優先で比較する\r\n   * @param tileA 牌\r\n   * @param tileB 牌\r\n   * @returns tileAの方が先であれば負の数、tileBの方が先であれば正の数\r\n   */\r\n  public compareTileByColor (tileA:MahjongTile, tileB:MahjongTile):number {\r\n    // 色の比較\r\n    const diffColor = tileA.color - tileB.color\r\n    if (diffColor !== 0) {\r\n      return diffColor\r\n    }\r\n    // 数の比較\r\n    const diffNumber = tileA.number - tileB.number\r\n    if (diffNumber !== 0) {\r\n      return diffNumber\r\n    }\r\n    // 両者についている特殊牌属性の種類(赤牌等)を列挙する\r\n    const options = Object.keys({ ...tileA.option, ...tileB.option }).sort()\r\n    // 特殊牌属性のついている牌が後にくるように値を返す\r\n    let optionCompare = 0\r\n    options.forEach(optionName => {\r\n      if (!optionCompare && tileA.option[optionName] && !tileB.option[optionName]) {\r\n        optionCompare = 1\r\n      } else if (!optionCompare && !tileA.option[optionName] && tileB.option[optionName]) {\r\n        optionCompare = -1\r\n      }\r\n    })\r\n    return optionCompare\r\n  }\r\n\r\n  /**\r\n   * 面子同士の比較。一意性があればなんでもいい。\r\n   * @param ma 面子\r\n   * @param mb 面子\r\n   * @returns 比較結果\r\n   */\r\n  public compareMianzi = (ma:IMianzi, mb:IMianzi):number => {\r\n    const compareMember =\r\n      ma.kind - mb.kind ||\r\n      ma.color - mb.color ||\r\n      ma.number - mb.number ||\r\n      _.compareArray(\r\n        ma.tiles.sort((ma, mb) => this.compareTileByNumber(ma, mb)),\r\n        mb.tiles.sort((ma, mb) => this.compareTileByNumber(ma, mb)),\r\n        (ma, mb) => this.compareTileByNumber(ma, mb)\r\n      )\r\n    return compareMember\r\n  }\r\n\r\n  /**\r\n   * 中身は問わず面子の種類だけ比較する。\r\n   * @param ma 面子\r\n   * @param mb 面子\r\n   * @return 比較結果\r\n   */\r\n  private compareMianziKind = (ma:IMianzi, mb:IMianzi):number => {\r\n    return (\r\n      ma.kind - mb.kind ||\r\n      ma.color - mb.color ||\r\n      ma.number - mb.number\r\n    )\r\n  }\r\n\r\n  /**\r\n   * 手牌から n 枚で構成される面子/対子を抜き出した全てのパターンを返却する\r\n   * @param number 抜き出す枚数、対子なら2枚、など\r\n   * @param tiles 手牌\r\n   * @returns 考えうる面子/対子と残りの牌の組\r\n   */\r\n  protected takeMianziNorm (number: number, tiles: MahjongTile[]):[IMianzi, MahjongTile[]][] {\r\n    // n 枚無い時は空配列を返す\r\n    if (tiles.length < number) {\r\n      return []\r\n    }\r\n    // 牌を n 枚抜き出し面子(雀頭)判定をする\r\n    const candidateMianzi = _.extractAllN(\r\n      tiles,\r\n      number,\r\n      (ta, tb) => this.compareTileByNumber(ta, tb)\r\n    )\r\n    // 抜き出した物が面子/対子か判定し、成立しなかったものは排除する\r\n    const _mianzis = candidateMianzi\r\n      .map((t:[MahjongTile[], MahjongTile[]]):[IMianzi[], MahjongTile[]] => [this.makeMianzi(t[0], false), t[1]])\r\n      .filter((t:[IMianzi[], MahjongTile[]]) => t[0].length !== 0)\r\n    // 銀河牌により複数の候補がある面子構成を開いて別々にする\r\n    // [[m1, m2, m3], Ts] -> [[m1, Ts], [m2, Ts], [m3, Ts]]\r\n    const mianzis:[IMianzi, MahjongTile[]][] = []\r\n    _mianzis.forEach(_m => {\r\n      const remaingTile = _m[1]\r\n      _m[0].forEach(mianzi => {\r\n        mianzis.push([mianzi, remaingTile])\r\n      })\r\n    })\r\n    return mianzis\r\n  }\r\n\r\n  /**\r\n   * 手牌から対子を抜き出せるパターンを列挙する\r\n   * @param tiles 手牌\r\n   * @returns 対子と残りの牌の組\r\n   */\r\n  protected takeDuizi (tiles: MahjongTile[]):[IMianzi, MahjongTile[]][] {\r\n    return this.takeMianziNorm(2, tiles)\r\n  }\r\n\r\n  /**\r\n   * 手牌から面子を抜き出せるパターンを列挙する\r\n   * @param tiles 手牌\r\n   * @returns 面子と残りの牌の組\r\n   */\r\n  protected takeMianzi (tiles: MahjongTile[]):[IMianzi, MahjongTile[]][] {\r\n    return this.takeMianziNorm(3, tiles)\r\n  }\r\n\r\n  /**\r\n   * 牌を単騎扱いする。ここに配列ぶちこむと大変な事になるので1枚しか認めない。\r\n   * @param tile 牌\r\n   * @returns 単騎と空配列\r\n   */\r\n  protected takeGuli (tile: MahjongTile):[IMianzi, MahjongTile[]][] {\r\n    return this.takeMianziNorm(1, [tile])\r\n  }\r\n\r\n  /**\r\n   * 手牌から可能な限り対子か面子か雀頭を取得し続け、取得可能なパターンを全て列挙する\r\n   * @param intermediateHand 既に抜いてある面子/雀頭\r\n   * @param takeXZi 面子を取るか雀頭を取るか\r\n   * @returns 取得可能な全ての手牌構成の列と残りの手牌\r\n   */\r\n  protected takeRecursivelyXZi (\r\n    intermediateHand:[IMianzi[], MahjongTile[]][], takeXZi:(tiles: MahjongTile[]) => [IMianzi, MahjongTile[]][]\r\n  ):[IMianzi[], MahjongTile[]][] {\r\n    if (\r\n      intermediateHand[0][1].length === 0 // 全ての牌が抜き取られこれ以上とる牌が無い場合(最初に同数の牌が与えられている事が前提)\r\n    ) {\r\n      return intermediateHand\r\n    }\r\n    // 結果保存用の変数\r\n    const concatMianzi:[IMianzi[], MahjongTile[]][] = []\r\n    intermediateHand.forEach(i => {\r\n      // 残りの手牌から面子のパターンを抽出\r\n      const takenXZi = takeXZi(i[1])\r\n      takenXZi.forEach(t => {\r\n        // [[...既にある面子, 今とった面子], [残った手牌]]\r\n        const candidateHand:[IMianzi[], MahjongTile[]] = [[...i[0], t[0]], t[1]]\r\n        // 現在取った面子\r\n        const currentMianzi = candidateHand[0]\r\n        // 今迄に取った面子の列\r\n        const existongConcatMianzi = concatMianzi.map(c => c[0])\r\n        if (\r\n          existongConcatMianzi\r\n            .every(\r\n              ms => !_.equalSetArray(\r\n                ms,\r\n                currentMianzi,\r\n                (a, b) => this.compareMianzi(a, b))\r\n            )) {\r\n          // 同一の面子(雀頭)の組み合わせが無い場合のみ結果に追加する\r\n          concatMianzi.push(candidateHand)\r\n        }\r\n      })\r\n    })\r\n    if (concatMianzi.length === 0) {\r\n      // これ以上取得が不可能であった場合\r\n      // 残った牌と一緒に抜いた面子構成を返却する\r\n      return intermediateHand\r\n    }\r\n    return this.takeRecursivelyXZi(concatMianzi, takeXZi)\r\n  }\r\n\r\n  /**\r\n   * 手牌から上がり形の算出を行う\r\n   * @param tiles 手牌\r\n   * @returns 考えうる面子構成のパターン\r\n   */\r\n  public solveHand (tiles: MahjongTile[]): IMianzi[][] {\r\n    return [\r\n      ...this.solveNormalHand(tiles),\r\n      ...this.solveExceptionalHand(tiles)\r\n    ]\r\n  }\r\n\r\n  /**\r\n   * 晒されていない手牌から通常の上がり形(1雀頭n面子)のパターンを列挙する\r\n   * @param tiles 手牌\r\n   * @returns 通常の上がり形として考えられる形\r\n   */\r\n  protected solveNormalHand (tiles: MahjongTile[]): IMianzi[][] {\r\n    // まず雀頭をとる\r\n    const _intermediateHand:[IMianzi, MahjongTile[]][] = this.takeDuizi(tiles)\r\n    // [[面子構成], 手牌] の配列に開く\r\n    const intermediateHand:[IMianzi[], MahjongTile[]][] = _intermediateHand.map(i => [[i[0]], i[1]])\r\n    // 残った手牌から面子をとり続ける\r\n    const arrangedManzi = this.takeRecursivelyXZi(intermediateHand, (ts) => this.takeMianzi(ts))\r\n    return arrangedManzi.filter(([mianzis, remaindHand]) => remaindHand.length === 0).map(mt => mt[0])\r\n  }\r\n\r\n  /**\r\n   * 特殊形(七対子、国士無双)の抽出を試みる\r\n   * @param tiles 手牌\r\n   * @returns 抽出された面子\r\n   */\r\n  private solveExceptionalHand (tiles: MahjongTile[]): IMianzi[][] {\r\n    return [...this.takeQiDuizi(tiles), ...this.takeShisanyao(tiles)]\r\n  }\r\n\r\n  /**\r\n   * 手牌から七対子の抽出を試みる\r\n   * @param tiles 手牌\r\n   * @returns 七対子が成立したらそのパターン\r\n   */\r\n  protected takeQiDuizi (tiles:MahjongTile[]): IMianzi[][] {\r\n    const intermediateHand:[IMianzi[], MahjongTile[]][] = [[[], tiles]]\r\n    const qiDuizi = this.takeRecursivelyXZi(intermediateHand, (ts) => this.takeDuizi(ts))\r\n    if (qiDuizi.length > 0) {\r\n      const duidis = qiDuizi.filter(([ds, remaingHand]) => remaingHand.length === 0).map(mt => mt[0])\r\n      const ret:IMianzi[][] = []\r\n      duidis.forEach(ds => {\r\n        if (\r\n          ds.length === 7 &&\r\n          _.makeAllPairsFromHead(ds)\r\n            .every(([d1, d2]) => !(d1.color === d2.color && d1.number === d2.number))\r\n        ) {\r\n          // 全ての対子において色と数の一致が見られなかったら\r\n          // (not or not の方が見やすいかもしれなかったけどパフォーマンスは多分こっちの方がいい)\r\n          ret.push(ds)\r\n        }\r\n      })\r\n      return ret\r\n    }\r\n    return []\r\n  }\r\n\r\n  /**\r\n   * 手牌から国士無双の抽出を試みる\r\n   * @param hand 手牌\r\n   * @returns 全て単騎として扱った牌の列\r\n   */\r\n  protected takeShisanyao (hand:MahjongTile[]): IMianzi[][] {\r\n    // 絶対に成立しない条件でガード節をつける\r\n    if (\r\n      hand.length !== 14 ||\r\n      !hand.every(t => (t.number === 9 || t.number === 1 || t.color === TileColor.feng || t.color === TileColor.sanyuan))\r\n    ) {\r\n      // 手牌が13枚無く、19字牌以外の牌がある\r\n      return []\r\n    }\r\n    const yaojiuPais = this.parser.parseTiles('1w9w1p9p1s9swsenblh')\r\n\r\n    // 全ての牌を単騎牌とした配列を生成する\r\n    let danqiss:IMianzi[][] = _.formation(hand.map(t => this.makeMianzi([t], false)))\r\n    // 同一扱いの牌が3枚以上あるパターンを排除する\r\n    danqiss = danqiss.filter((danqis:IMianzi[]) => _.uniq(danqis, (ma:IMianzi, mb:IMianzi) => this.compareMianziKind(ma, mb)).length > 11)\r\n\r\n    const ret:IMianzi[][] = []\r\n    danqiss.forEach(ds => {\r\n      // 単騎として扱われている牌を全て通常牌に戻す\r\n      const asHands = ds.map(d => new MahjongTile(d.color, d.number, {}))\r\n      // 么九牌との差分をとる\r\n      const missingTile = _.extractMultiple(yaojiuPais, asHands, (ta, tb) => this.canBeSameTile(ta, tb))\r\n      if (missingTile.length === 0) {\r\n        // 么九牌が全てあったら国士成立\r\n        ret.push(ds)\r\n      }\r\n    })\r\n    return ret\r\n  }\r\n\r\n  public solveHuleTile (hand:MahjongTile[]):[IMianzi[], MahjongTile[], waitForm][] {\r\n    return [\r\n      ...this.solveHuleTileCommoon(hand),\r\n      ...this.solveHuleTileExceptionalHand(hand)\r\n    ]\r\n  }\r\n\r\n  /**\r\n   * 手牌から通常形の上がり形と上がり牌を算出する\r\n   * @param hand 手牌\r\n   * @returns [抽出された面子, 上がり牌, 待ち形]\r\n   */\r\n  protected solveHuleTileCommoon (hand:MahjongTile[]):[IMianzi[], MahjongTile[], waitForm][] {\r\n    return [\r\n      ...this.solveHuleTileCommonMianziFirst(hand),\r\n      ...this.solveHuleTileCommonDuiziFirst(hand)\r\n    ]\r\n  }\r\n\r\n  /**\r\n   * 待ち牌の検索。面子抜き出し優先で行う\r\n   * @param hand 手牌\r\n   * @returns 面子構成、待ち、待ち形 の列\r\n   */\r\n  protected solveHuleTileCommonMianziFirst (hand:MahjongTile[]):[IMianzi[], MahjongTile[], waitForm][] {\r\n    // まずは面子をできるだけ抜く\r\n    // 同一パターンの刈り取りはこの時点でされている筈\r\n    const completePartial = this.takeRecursivelyXZi([[[], hand]], (tiles) => this.takeMianzi(tiles))\r\n    const ret:[IMianzi[], MahjongTile[], waitForm][] = []\r\n    completePartial.forEach(([takenMianzis, remaingTiles]) => {\r\n      if (remaingTiles.length === 1) {\r\n        // 単騎待ちの場合\r\n        const gulis = this.takeGuli(remaingTiles[0])\r\n        gulis.forEach(([guli, none]) => {\r\n          // 単騎待ちの形を配列に追加する\r\n          const [waitTile, waitForm] = this.deriveHuleTileCommonFromWait([guli])\r\n          ret.push([[...takenMianzis, guli], waitTile, waitForm])\r\n        })\r\n      } else if (remaingTiles.length === 4) {\r\n        // 4枚残っている場合。双椪か 対子 + 塔子 のはず\r\n        // 対子の抽出を試みる\r\n        const triedTakeDuizis = this.takeRecursivelyXZi([[[], remaingTiles]], (tiles) => this.takeDuizi(tiles))\r\n        triedTakeDuizis.forEach(([mianzis, remaingTiles]) => {\r\n          // 塔子が残る場合は solveHuleTileCommonDuiziFirst でカバーする\r\n          if (mianzis.length === 2) {\r\n            // 双椪待ちの場合\r\n            // 待ちを算出して配列に追加する\r\n            const [waitTile, waitForm] = this.deriveHuleTileCommonFromWait(mianzis)\r\n            ret.push([takenMianzis.concat(mianzis), waitTile, waitForm])\r\n          }\r\n        })\r\n      }\r\n      return ret\r\n    })\r\n    // 最後に結果の列を返す\r\n    return ret\r\n  }\r\n\r\n  /**\r\n   * 対子優先で待ち牌の算出を行う\r\n   * @param hand 手牌\r\n   * @returns [面子構成, 待ち牌, 待ち形] の列\r\n   */\r\n  protected solveHuleTileCommonDuiziFirst (hand:MahjongTile[]):[IMianzi[], MahjongTile[], waitForm][] {\r\n    /**\r\n     * 塔子をいままで抜いた面子にくっつける\r\n     * @param takenMianzis 既に抜いた面子\r\n     * @param tiles 牌(2枚)\r\n     * @returns 面子構成、待ち牌、待ち形の配列\r\n     */\r\n    const conbineMianzisAndTazi = (takenMianzis:IMianzi[], tiles:MahjongTile[]):[IMianzi[], MahjongTile[], waitForm][] => {\r\n      const ret:[IMianzi[], MahjongTile[], waitForm][] = []\r\n      const triedMakeTazi = this.makeTazi(tiles)\r\n      triedMakeTazi.forEach(tazi => {\r\n        const [waitTile, waitForm] = this.deriveHuleTileCommonFromWait([tazi])\r\n        ret.push([[...takenMianzis, tazi], waitTile, waitForm])\r\n      })\r\n      return ret\r\n    }\r\n    // 対子を一つ抜く\r\n    const takenDuiziPatternsFromHand = this.takeDuizi(hand)\r\n    const ret:[IMianzi[], MahjongTile[], waitForm][] = []\r\n    takenDuiziPatternsFromHand.forEach(([duizi, remaindTiles]) => {\r\n      // 面子を可能な限り取得する\r\n      const completePartial = this.takeRecursivelyXZi([[[duizi], remaindTiles]], (tiles) => this.takeMianzi(tiles))\r\n      completePartial.forEach(([mianzis, remaindTiles]) => {\r\n        if (remaindTiles.length === 2) {\r\n          // 残ってる牌が2枚だった場合\r\n          // 塔子の生成を試みる\r\n          ret.push(...conbineMianzisAndTazi(mianzis, remaindTiles))\r\n        }\r\n      })\r\n    })\r\n    return ret\r\n  }\r\n\r\n  /**\r\n   * 特殊形の待ち牌算出を試みる\r\n   * @param hand 手牌\r\n   * @returns [面子構成, 待ち牌, 待ち形] の列\r\n   */\r\n  protected solveHuleTileExceptionalHand (hand:MahjongTile[]):[IMianzi[], MahjongTile[], waitForm][] {\r\n    return [...this.solveHuleTileQiDuizi(hand), ...this.solveHuleTileShisanyao(hand)]\r\n  }\r\n\r\n  /**\r\n   * 手牌から七対子の待ち牌算出を試みる\r\n   * @param hand 手牌\r\n   * @returns [面子構成, 待ち牌, 待ち形] の列\r\n   */\r\n  protected solveHuleTileQiDuizi (hand:MahjongTile[]):[IMianzi[], MahjongTile[], waitForm][] {\r\n    if (hand.length !== 13) {\r\n      // 手牌が13枚でない時は即座に終了する\r\n      return []\r\n    }\r\n    // 手牌から対子をできるだけ抽出する\r\n    const ret:[IMianzi[], MahjongTile[], waitForm][] = []\r\n    const duizis = this.takeRecursivelyXZi([[[], hand]], (ts) => this.takeDuizi(ts))\r\n    duizis.forEach(([duizis, remaingTiles]) => {\r\n      if (remaingTiles.length === 1) {\r\n        ret.push(...this\r\n          .takeGuli(remaingTiles[0])\r\n          .map(([guli, none]):[IMianzi, [MahjongTile[], waitForm]] => [guli, this.deriveHuleTileCommonFromWait([guli])])\r\n          .map(([guli, [tiles, waitForm]]):[IMianzi[], MahjongTile[], waitForm] => [[...duizis, guli], tiles, waitForm])\r\n        )\r\n      }\r\n    })\r\n    return ret\r\n  }\r\n\r\n  /**\r\n   * 手牌から国士無双の待ち牌算出を試みる\r\n   * @param hand 手牌\r\n   * @return [手牌構成全て単騎扱い, 待ち牌, 待ち形(便宜的に単騎)] の列\r\n   */\r\n  protected solveHuleTileShisanyao (hand:MahjongTile[]):[IMianzi[], MahjongTile[], waitForm][] {\r\n    if (\r\n      hand.length !== 13 ||\r\n      !hand.every(t => (t.number === 9 || t.number === 1 || t.color === TileColor.feng || t.color === TileColor.sanyuan))\r\n    ) {\r\n      // 手牌が13枚無く、19字牌以外の牌がある\r\n      return []\r\n    }\r\n\r\n    // 么九牌の組\r\n    const yaojiuPais = this.parser.parseTiles('1w9w1p9p1s9seswnblh')\r\n\r\n    // 全ての牌を単騎牌とした配列を生成する\r\n    let danqiss:IMianzi[][] = _.formation(hand.map(t => this.makeMianzi([t], false)))\r\n    // 同一扱いの牌が3枚以上あるパターンを排除する\r\n    danqiss = danqiss.filter((danqis:IMianzi[]) => _.uniq(danqis, (ma:IMianzi, mb:IMianzi) => this.compareMianziKind(ma, mb)).length > 11)\r\n\r\n    const ret:[IMianzi[], MahjongTile[], waitForm][] = []\r\n    danqiss.forEach(ds => {\r\n      // 単騎として扱われている牌を全て通常牌に戻す\r\n      const asHands = ds.map(d => new MahjongTile(d.color, d.number, {}))\r\n      // 么九牌との差分をとる\r\n      const missingTile = _.extractMultiple(yaojiuPais, asHands, (ta, tb) => this.canBeSameTile(ta, tb))\r\n      if (missingTile.length === 1 || missingTile.length === 0) {\r\n        // 么九牌が全てあったら 13 面待ち\r\n        const waitTile = missingTile.length === 1 ? missingTile : yaojiuPais\r\n        ret.push([ds, waitTile, waitForm.danqi])\r\n      }\r\n    })\r\n    return ret\r\n  }\r\n\r\n  /**\r\n   * 塔子、双椪から待ちの種類と待ち牌を算出する\r\n   * @param ms 塔子1つか対子1つ\r\n   * @returns [待ち牌, 待ち形] の列\r\n   */\r\n  public deriveHuleTileCommonFromWait (ms:IMianzi[]):[MahjongTile[], waitForm] {\r\n    if (ms.length === 2 && ms[0].kind === MianziKind.duizi && ms[1].kind === MianziKind.duizi) {\r\n      // 双椪\r\n      const [m1, m2] = ms\r\n      const tiles:MahjongTile[] = [\r\n        new MahjongTile(m1.color, m1.number, {}),\r\n        new MahjongTile(m2.color, m2.number, {})\r\n      ]\r\n      return [tiles, waitForm.shuangPong]\r\n    }\r\n    const m = ms[0]\r\n    if (m.kind === MianziKind.guli) {\r\n      // 孤立牌(単騎)\r\n      return [[new MahjongTile(m.color, m.number, {})], waitForm.danqi]\r\n    }\r\n    const [t1, t2] = m.tiles.sort(this.compareTileByNumber)\r\n    if (t1.number + 2 === t2.number) {\r\n      // 嵌張\r\n      return [[new MahjongTile(m.color, t1.number + 1, {})], waitForm.quianZhang]\r\n    }\r\n    if (t1.number + 1 === t2.number) {\r\n      // 連続した牌の場合(本当はこの条件いらんけど一応)\r\n      if (t1.number === 8) { // TODO: マジックナンバーなのが気に食わない\r\n        return [[new MahjongTile(m.color, t1.number - 1, {})], waitForm.bianShang]\r\n      }\r\n      if (t1.number === 1) {\r\n        return [[new MahjongTile(m.color, t2.number + 1, {})], waitForm.bianShang]\r\n      }\r\n      return [\r\n        [\r\n          new MahjongTile(m.color, t1.number - 1, {}),\r\n          new MahjongTile(m.color, t2.number + 1, {})\r\n        ],\r\n        waitForm.ligngMain\r\n      ]\r\n    }\r\n    throw Error('deriveHuleTileCommon: Illigal wait form')\r\n  }\r\n\r\n  /**\r\n   * 塔子を作成する。数牌限定。\r\n   * 通常の面子作成に組み込んでしまうとパターンが爆発的に増えてしまうので別にしなければいけない\r\n   * @param tileA 牌\r\n   * @param tileB 牌\r\n   * @returns 塔子\r\n   */\r\n  public makeTazi (tiles:MahjongTile[]):IMianzi[] {\r\n    const [tileA, tileB] = tiles\r\n    const symboledTileColor = [TileColor.feng, TileColor.sanyuan]\r\n    const equal = (a:number, b:number) => a === b\r\n    if (_.isContained(symboledTileColor, tileA.color, equal) || _.isContained(symboledTileColor, tileB.color, equal)) {\r\n      return []\r\n    }\r\n    if (Math.abs(tileA.number - tileB.number) <= 2 && tileA.number !== tileB.number) {\r\n      return this.shoudBeTaziColor(tileA, tileB).map(color => {\r\n        return {\r\n          tiles: [tileA, tileB],\r\n          color,\r\n          number: Math.min(tileA.number, tileB.number),\r\n          kind: MianziKind.tazi,\r\n          isOpend: false\r\n        }\r\n      })\r\n    }\r\n    return []\r\n  }\r\n\r\n  /**\r\n   * 二つの牌が塔子として扱われた最にどの色になるかを判定する。数牌限定\r\n   * @param tileA 牌\r\n   * @param tileB 牌\r\n   * @returns 想定される色の種類\r\n   */\r\n  protected shoudBeTaziColor (tileA:MahjongTile, tileB:MahjongTile):TileColor[] {\r\n    if (tileA.color === tileB.color) {\r\n      return [tileA.color]\r\n    }\r\n    return []\r\n  }\r\n\r\n  /**\r\n   * 手牌から対子を一つ抽出する\r\n   * @param tile 手牌\r\n   * @returns 対子と残りの牌の組の配列\r\n   */\r\n  protected takeTazi (hand: MahjongTile[]):[IMianzi, MahjongTile[]][] {\r\n    const _hand = [...hand]\r\n    const compare = (ta:MahjongTile, tb:MahjongTile) => this.compareTileByNumber(ta, tb)\r\n    // 数字順に並べたペアを用意する\r\n    const sortedHandPairs = _.makeAllPairsFromHead(_hand.sort(compare))\r\n    // 返却用の変数\r\n    const ret:[IMianzi, MahjongTile[]][] = []\r\n\r\n    sortedHandPairs.forEach(ts => {\r\n      // 今迄抽出した牌を列挙する\r\n      const takedTiles = ret.map(([mianzi, tiles]) => mianzi.tiles)\r\n      if (takedTiles.every(tm => !_.compareArray(tm, ts, compare))) {\r\n        // 同一牌の組合せが無かったら\r\n        // 「残りの牌」を生成する\r\n        const remaingTile = _.extractMultiple(hand, ts, (ta, tb) => compare(ta, tb) === 0)\r\n        const tazis = this.makeTazi(ts)\r\n        ret.push(...tazis.map((m:IMianzi):[IMianzi, MahjongTile[]] => [m, remaingTile]))\r\n      }\r\n    })\r\n    return ret\r\n  }\r\n\r\n  /**\r\n   * 各色牌の最大数。ドラ等に使用する。\r\n   * @param color 牌色、風牌と三元牌は分ける\r\n   * @returns その色の最大数\r\n   */\r\n  protected getMaxNumber (color: TileColor): number {\r\n    switch (color) {\r\n      case TileColor.wanzi:\r\n      case TileColor.siozi:\r\n      case TileColor.tongzi:\r\n        return 9\r\n      case TileColor.feng:\r\n        return 4\r\n      case TileColor.sanyuan:\r\n        return 3\r\n    }\r\n    throw Error(`Invalid color ${TileColor[color]}`)\r\n  }\r\n\r\n  /**\r\n   * 特殊牌ではない牌の一覧の生成\r\n   * @returns 使用される通常牌の一覧\r\n   */\r\n  protected generateNormalTileType ():MahjongTile[] {\r\n    const ret:MahjongTile[] = []\r\n    // 数牌の生成\r\n    for (const kind in tileMap.numberdTileMap) {\r\n      for (let number = 1; number <= tileMap.numberdTileMap[kind].maxNumber; number++) {\r\n        ret.push(new MahjongTile(tileMap.numberdTileMap[kind].color, number, {}))\r\n      }\r\n    }\r\n    // 字牌の生成\r\n    for (const tile in tileMap.symboledTileMap) {\r\n      ret.push(new MahjongTile(tileMap.symboledTileMap[tile].color, tileMap.symboledTileMap[tile].number, {}))\r\n    }\r\n    return ret\r\n  }\r\n\r\n  /**\r\n   * この麻雀で使用する全ての牌のセットを提供する\r\n   * @param normalTileType 通常牌の種類\r\n   * @returns 麻雀で使用する牌全てのセット\r\n   */\r\n  protected provisionAllTileSet (normalTileType:MahjongTile[]):MahjongTile[] {\r\n    // TODO: このクラスの役割じゃない気がしている。多分 PlayMahjong かその派生クラスに移すのが適当。\r\n    const tileSet:MahjongTile[] = []\r\n    // 通常牌を4枚ずつ用意する\r\n    normalTileType.forEach(t => tileSet.push(t, t, t, t))\r\n    return tileSet\r\n  }\r\n}\r\n\r\n/**\r\n * 牌オブジェクトを文字列から生成するユーティリティ\r\n */\r\nclass MahjongTileParser extends MahjongTileParserBase {\r\n  private static _instance:MahjongTileParser\r\n  private constructor () {\r\n    super(\r\n      tileMap.numberdTileMap,\r\n      tileMap.symboledTileMap,\r\n      tileMap.option\r\n    )\r\n  }\r\n\r\n  static getInstance ():MahjongTileParser {\r\n    if (!this._instance) {\r\n      this._instance = new MahjongTileParser()\r\n    }\r\n    return this._instance\r\n  }\r\n}\r\n","import { toNumber } from '@vue/shared'\r\nimport { _ } from '../util/util'\r\nimport { GalaxyTileParser } from './galaxy_tile_parser'\r\nimport { MahjongTile, TileColor } from './mahjong_tile'\r\nimport { IMianzi, MianziKind, waitForm } from './mianzi'\r\nimport { MahjongRule } from './rule_base'\r\n\r\n/**\r\n * 銀河マージャンルール、シングルトンで提供される\r\n */\r\nexport class GalaxyMahjongRule extends MahjongRule {\r\n  private static galaxyInstance:MahjongRule\r\n\r\n  private constructor () {\r\n    super()\r\n    this.parser = GalaxyTileParser.getInstance()\r\n    // 通常牌に銀河属性をつけたものを銀河牌の一覧として登録する\r\n    const glaxyTiles = this.NORMAL_TILE_TYPE.map(t => new MahjongTile(t.color, t.number, { isGalaxy: true }))\r\n    // 赤は伍にだけある\r\n    const redTiles = this.parser.parseTiles('5sr5wr5pr')\r\n    this.ALL_TILE_TYPE = [...this.NORMAL_TILE_TYPE, ...glaxyTiles, ...redTiles]\r\n    this.ALL_TILE_SET = this.provisionAllTileSet(this.NORMAL_TILE_TYPE)\r\n  }\r\n\r\n  static getInstance (): MahjongRule {\r\n    if (!GalaxyMahjongRule.galaxyInstance) {\r\n      GalaxyMahjongRule.galaxyInstance = new GalaxyMahjongRule()\r\n    }\r\n    return GalaxyMahjongRule.galaxyInstance\r\n  }\r\n\r\n  private static getInstanceAsGalaxyRule ():GalaxyMahjongRule {\r\n    const instance = GalaxyMahjongRule.getInstance()\r\n    return instance as GalaxyMahjongRule\r\n  }\r\n\r\n  public canBeNextTile (tile: MahjongTile, nextTile: MahjongTile):boolean {\r\n    if (\r\n      tile.color === TileColor.feng ||\r\n      tile.color === TileColor.sanyuan ||\r\n      tile.number === this.getMaxNumber(tile.color)) {\r\n      // 字牌、三元牌、9には次の牌は無い\r\n      return false\r\n    }\r\n    if (tile.option.isGalaxy || nextTile.option.isGalaxy) {\r\n      // 銀河牌ならどの色でも次の牌になる\r\n      return (tile.number + 1) === nextTile.number\r\n    }\r\n    // 普通の牌だったら色が同一で次の数である事\r\n    return (tile.color === nextTile.color && tile.number + 1 === nextTile.number)\r\n  }\r\n\r\n  public canBeSameTile (tile: MahjongTile, expect: MahjongTile):boolean {\r\n    if (tile.option.isGalaxy || expect.option.isGalaxy) {\r\n      // どちらか片方が銀河牌だった場合\r\n      const baseTile = tile.option.isGalaxy ? expect : tile\r\n      const targetTile = tile.option.isGalaxy ? tile : expect\r\n      switch (baseTile.color) {\r\n        // 銀河牌 *ではない* 方の色を基準に比べる\r\n        case TileColor.feng:\r\n          // 風牌だった場合は風牌かどうかだけ調べる\r\n          return targetTile.color === TileColor.feng\r\n        case TileColor.sanyuan:\r\n          // 三元牌だった場合は三元牌かどうかだけ調べる\r\n          return targetTile.color === TileColor.sanyuan\r\n        default: {\r\n          // 数牌の場合は数字だけ比べる\r\n          return tile.number === expect.number\r\n        }\r\n      }\r\n    }\r\n    // そうでない場合は色と数字を両方比べる\r\n    return (tile.color === expect.color) && (tile.number === expect.number)\r\n  }\r\n\r\n  public deriveDragon (tile: MahjongTile):MahjongTile[] {\r\n    if (tile.option.isGalaxy) {\r\n      // ドラ表が銀河牌だった場合\r\n      switch (tile.color) {\r\n        case TileColor.feng:\r\n          // 風牌だった場合、風牌の全てがドラ\r\n          return ['w', 's', 'e', 'n'].map((t) => this.parser.parseTile(t))\r\n        case TileColor.sanyuan:\r\n          // 三元牌だった場合は三元牌の全てがドラ\r\n          return ['b', 'l', 'h'].map((t) => this.parser.parseTile(t))\r\n        default: {\r\n          // 数牌だった場合は、次の数字の全ての色がドラ\r\n          const dragonNumber = ((\r\n            tile.number %\r\n            this.getMaxNumber(tile.color)\r\n          ) + 1).toString()\r\n          return [\r\n            dragonNumber + 'w',\r\n            dragonNumber + 'p',\r\n            dragonNumber + 's'\r\n          ].map((t) => this.parser.parseTile(t))\r\n        }\r\n      }\r\n    }\r\n    // ドラ表が普通の牌だった場合\r\n    const maxDoragonNum = this.getMaxNumber(tile.color)\r\n    const dragonNum = (tile.number % maxDoragonNum) + 1\r\n    return [new MahjongTile(tile.color, dragonNum, { })]\r\n  }\r\n\r\n  /** 全ての牌が銀河牌である */\r\n  private areAllGalaxy = (tiles: MahjongTile[]):boolean => {\r\n    return tiles.every((t) => t.option.isGalaxy)\r\n  }\r\n\r\n  public makeMianzi (tiles: MahjongTile[], isOpend:boolean): IMianzi[] {\r\n    if (tiles.length >= 5) {\r\n      // 1枚か5枚以上は面子にならない\r\n      return []\r\n    }\r\n    const numColor = [TileColor.siozi, TileColor.tongzi, TileColor.wanzi]\r\n    /** 与えられた全ての牌が同一視できるか */\r\n    const canBeSameAllTile = (tiles:MahjongTile[]):boolean => {\r\n      if (tiles.length === 1) {\r\n        return true\r\n      }\r\n      return _.everyPairAllPairWith((ta, tb) => this.canBeSameTile(ta, tb), tiles)\r\n    }\r\n    if (canBeSameAllTile(tiles)) {\r\n      // 全ての牌が同じ場合(孤立牌か対子か刻子か槓子の場合)\r\n      // 面子の種類を選択する\r\n      const kind:MianziKind = [MianziKind.guli, MianziKind.duizi, MianziKind.kezi, MianziKind.kangzi][tiles.length - 1]\r\n\r\n      if (this.areAllGalaxy(tiles)) {\r\n        // 牌が全部銀河であった場合\r\n        if (numColor.includes(tiles[0].color)) {\r\n          // 牌か数牌だった場合\r\n          // 全ての色の刻子を返す\r\n          const number = tiles[0].number\r\n          return numColor.map((color):IMianzi => {\r\n            return { tiles, kind, number, color, isOpend }\r\n          })\r\n        } else if (tiles[0].color === TileColor.feng) {\r\n          // 牌が風牌だった場合\r\n          // 東南西北の刻子を返す\r\n          return [1, 2, 3, 4].map((number):IMianzi => {\r\n            return { tiles, kind, number, color: TileColor.feng, isOpend }\r\n          })\r\n        } else if (tiles[0].color === TileColor.sanyuan) {\r\n          // 牌が三元牌だった場合\r\n          // 白發中の刻子を返す\r\n          return [1, 2, 3].map((number):IMianzi => {\r\n            return { tiles, kind, number, color: TileColor.sanyuan, isOpend }\r\n          })\r\n        }\r\n      }\r\n      // 通常の牌が入っていた場合\r\n      // 字牌の考慮をし銀河牌ではない牌を探して採番する\r\n      // find が undefine を返す可能性があるため(ないが)ガードをつけている\r\n      const number:number = (tiles.find(t => !t.option.isGalaxy) || tiles[0]).number\r\n      const color:TileColor = (tiles.find(t => !t.option.isGalaxy) || tiles[0]).color\r\n      return [{ tiles, kind, number, color, isOpend }]\r\n    }\r\n    // 牌が順子の(可能性がある)場合\r\n    if (\r\n      tiles.every(t => t.color !== TileColor.feng && t.color !== TileColor.sanyuan) && // 字牌ではない\r\n      tiles.length === 3 && // 牌が3枚である\r\n      _.everyPairFromHeadWith((c, n) => this.canBeNextTile(c, n), tiles) && // 3つの牌が並びになっている\r\n      _.everyPairAllPairWith((ta, tb) => (ta.option.isGalaxy || tb.option.isGalaxy || ta.color === tb.color), tiles) // 銀河でない牌は全て色が同一である\r\n    ) {\r\n      const kind = MianziKind.shunzi\r\n      if (this.areAllGalaxy(tiles)) {\r\n        // 全ての牌が銀河だったら\r\n        // 3種の色の面子を全て返す\r\n        return numColor.map((color):IMianzi => {\r\n          return { tiles, kind, number: tiles[0].number, color, isOpend }\r\n        })\r\n      }\r\n      // 通常の牌が入っていた場合\r\n      // 正当性チェックはこの if 節で行っているためどれかの色をとってくればいい\r\n      const color = (tiles.find(t => !t.option.isGalaxy) || tiles[0]).color\r\n      return [{ tiles, kind, number: tiles[0].number, color, isOpend }]\r\n    }\r\n    return []\r\n  }\r\n\r\n  public makeTazi (tiles:MahjongTile[]): IMianzi[] {\r\n    const isOpend = false\r\n    const numColor = [TileColor.siozi, TileColor.tongzi, TileColor.wanzi]\r\n    if (\r\n      tiles.length === 2 && // 牌が2枚\r\n      tiles.every(t => t.color !== TileColor.feng && t.color !== TileColor.sanyuan) && // 字牌ではない\r\n      (tiles[0].option.isGalaxy || tiles[1].option.isGalaxy || tiles[0].color === tiles[1].color) &&// 二つの牌の色が同一視できるか\r\n      Math.abs(tiles[0].number - tiles[1].number) <= 2 && // ふたつの牌の数差が2以下か\r\n      tiles[0].number !== tiles[1].number // 対子ではない\r\n    ) {\r\n      const kind = MianziKind.tazi\r\n      // TODO: 重複したコード群\r\n      if (this.areAllGalaxy(tiles)) {\r\n        return numColor.map((color):IMianzi => {\r\n          return { tiles, kind, number: tiles[0].number, color, isOpend }\r\n        })\r\n      }\r\n      // 通常の牌が入っていた場合\r\n      // 正当性チェックはこの if 節で行っているためどれかの色をとってくればいい\r\n      const color = (tiles.find(t => !t.option.isGalaxy) || tiles[0]).color\r\n      return [{ tiles, kind, number: tiles[0].number, color, isOpend }]\r\n    }\r\n    return []\r\n  }\r\n\r\n  /**\r\n   * 二つの牌が塔子として扱われた最にどの色になるかを判定する。数牌限定。\r\n   * @param tileA 牌\r\n   * @param tileB 牌\r\n   * @returns 想定される牌の色\r\n   */\r\n  protected shoudBeTaziColor (tileA:MahjongTile, tileB:MahjongTile):TileColor[] {\r\n    if (tileA.option.isGalaxy && tileB.option.isGalaxy) {\r\n      return [TileColor.wanzi, TileColor.tongzi, TileColor.wanzi]\r\n    }\r\n    const nonGalaxyTile = tileA.option.isGalaxy ? tileB : tileA\r\n    return [nonGalaxyTile.color]\r\n  }\r\n\r\n  /**\r\n   * この麻雀で使用する全ての牌のセットを提供する\r\n   * @param normalTileType 通常牌の種類\r\n   * @returns 麻雀で使用する牌全てのセット\r\n   */\r\n  protected provisionAllTileSet (normalTileType:MahjongTile[]):MahjongTile[] {\r\n    const tileSet:MahjongTile[] = []\r\n    normalTileType.forEach(t => {\r\n      if (t.number === 5) {\r\n        // 赤伍は1枚入れる、銀河牌も入れる。\r\n        tileSet.push(\r\n          t,\r\n          t,\r\n          new MahjongTile(t.color, t.number, { isRed: true }),\r\n          new MahjongTile(t.color, t.number, { isGalaxy: true })\r\n        )\r\n      } else {\r\n        // 全ての牌に銀河牌を1つ入れる\r\n        tileSet.push(\r\n          t,\r\n          t,\r\n          t,\r\n          new MahjongTile(t.color, t.number, { isGalaxy: true })\r\n        )\r\n      }\r\n    })\r\n    return tileSet\r\n  }\r\n}\r\n","export const MUTATION = {\r\n  countUp: 'countup',\r\n  countDown: 'countDown',\r\n  setMahjongRule: 'setMahjongRule',\r\n  setUniqNumber: 'setUniqNumber',\r\n  addTileToHand: 'addTileToHand',\r\n  removeTileFromHand: 'removeTileFromHand',\r\n  dropAllHand: 'dropAllHand',\r\n  switchAddTileMode: 'switchAddTileMode',\r\n  setSolvedHulePatterns: 'setSolvedHulePatterns'\r\n}\r\n\r\nexport const ACTION = {\r\n  replaceHand: 'replaceHand',\r\n  getAllHand: 'getAllHand',\r\n  getUniqNumber: 'getUniqNumber'\r\n}\r\n","export enum SolveMode {\r\n  'hand',\r\n  'waitTile'\r\n}\r\n\r\nexport enum AddTileMode {\r\n  'hand',\r\n  'hulu',\r\n  'huluWithAngang'\r\n}\r\n","// store.ts\r\nimport { IMianzi, MahjongRule, MahjongTile, waitForm } from '@/lib/mahjong'\r\nimport { _ } from '@/lib/util/util'\r\nimport deepEqual from 'deep-equal'\r\nimport { InjectionKey } from 'vue'\r\nimport { createStore, Store, useStore as baseUseStore } from 'vuex'\r\nimport { ACTION, MUTATION } from './mutationType'\r\nimport { AddTileMode, SolveMode } from './store_enum'\r\n\r\n// ストアのステートに対して型を定義します\r\nexport interface State {\r\n  count: number\r\n  rule: MahjongRule\r\n  handNumber: number\r\n  mahjongHands: [MahjongTile, number][]\r\n  opendMianzis: [IMianzi, number][]\r\n  patialMianzi: MahjongTile[]\r\n  addTileMode: AddTileMode\r\n  solveMode: SolveMode\r\n  solvedHand: IMianzi[][]\r\n  solvedHuleTile: [IMianzi[], MahjongTile[], waitForm, number][]\r\n}\r\n\r\n// インジェクションキーを定義します\r\nexport const key: InjectionKey<Store<State>> = Symbol('injention key')\r\n\r\nexport const store = createStore<State>({\r\n  state: {\r\n    count: 0,\r\n    rule: MahjongRule.getInstance(),\r\n    handNumber: 0,\r\n    mahjongHands: [],\r\n    opendMianzis: [],\r\n    patialMianzi: [],\r\n    addTileMode: AddTileMode.hand,\r\n    solveMode: SolveMode.waitTile,\r\n    solvedHand: [],\r\n    solvedHuleTile: []\r\n  },\r\n  mutations: {\r\n    [MUTATION.countUp] (state) {\r\n      state.count = state.count + 1\r\n    },\r\n    [MUTATION.countDown] (state) {\r\n      state.count = state.count - 1\r\n    },\r\n    [MUTATION.setMahjongRule] (state, rule:MahjongRule) {\r\n      state.rule = rule\r\n    },\r\n    [MUTATION.setUniqNumber] (state, num:number) {\r\n      state.handNumber = num\r\n    },\r\n    [MUTATION.addTileToHand] (state, tile:MahjongTile) {\r\n      state.handNumber = state.handNumber + 1\r\n      const newHand:[MahjongTile, number][] = [...state.mahjongHands, [tile, state.handNumber]]\r\n      state.mahjongHands = newHand\r\n        .sort(([ta, na], [tb, nb]) => state.rule.compareTileByColor(ta, tb))\r\n    },\r\n    [MUTATION.removeTileFromHand] (state, tile:[MahjongTile, number]) {\r\n      state.mahjongHands = _.extract(state.mahjongHands, tile, deepEqual)\r\n        .sort(([ta, na], [tb, nb]) => state.rule.compareTileByColor(ta, tb))\r\n    },\r\n    [MUTATION.dropAllHand] (state) {\r\n      state.mahjongHands = []\r\n      state.opendMianzis = []\r\n    },\r\n    [MUTATION.switchAddTileMode] (state, mode:AddTileMode) {\r\n      state.addTileMode = mode\r\n    },\r\n    [MUTATION.setSolvedHulePatterns] (state, hulePatterns:[IMianzi[], MahjongTile[], waitForm][]) {\r\n      state.solvedHuleTile = []\r\n      hulePatterns.forEach(([ms, ts, f]) => {\r\n        state.handNumber = state.handNumber + 1\r\n        state.solvedHuleTile.push([ms, ts, f, state.handNumber])\r\n      })\r\n    }\r\n  },\r\n\r\n  actions: {\r\n    [ACTION.replaceHand] (context) {\r\n      const tiles = context.state.mahjongHands.map(([tile, num]) => tile)\r\n      context.commit(MUTATION.dropAllHand)\r\n      tiles.forEach(t => {\r\n        context.commit(MUTATION.addTileToHand, t)\r\n      })\r\n    },\r\n    [ACTION.getAllHand] (context):MahjongTile[] {\r\n      const tiles = context.state.mahjongHands.map(([tile, num]) => tile)\r\n      const opendTiles = context.state.opendMianzis.map(([mianzi, num]) => mianzi.tiles).flat()\r\n      const allHand = [...tiles, ...opendTiles]\r\n      return allHand.sort(context.state.rule.compareTileByColor)\r\n    },\r\n    [ACTION.getUniqNumber] (context):number {\r\n      context.commit(MUTATION.setUniqNumber, context.state.handNumber + 1)\r\n      return context.state.handNumber\r\n    }\r\n  }\r\n})\r\n\r\n// 独自の `useStore` 関数を定義します\r\nexport function useStore () {\r\n  return baseUseStore(key)\r\n}\r\n","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = [\"disabled\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"button\", {\n      class: \"btn btn-outline-primary\",\n      disabled: !_ctx.canSolveHuleTile,\n      hidden: \"\"\n    }, \" 手牌構成を解析する \", 8, _hoisted_1)\n  ]))\n}","\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { Store } from 'vuex'\r\nimport { State } from '@vue/runtime-core'\r\nimport { useStore } from '@/store/store'\r\n\r\n@Options({\r\n  components: {\r\n  }\r\n})\r\nexport default class SolveHandButton extends Vue {\r\n  store!:Store<State>\r\n\r\n  created ():void {\r\n    this.store = useStore()\r\n  }\r\n\r\n  get canSolveHuleTile ():boolean {\r\n    const tilesCount:number = this.store.state.mahjongHands.length\r\n    return !!([2, 5, 8, 11, 14].find(n => n === tilesCount))\r\n  }\r\n}\r\n","import { render } from \"./solve_hand_button.vue?vue&type=template&id=30f67996&ts=true\"\nimport script from \"./solve_hand_button.vue?vue&type=script&lang=ts\"\nexport * from \"./solve_hand_button.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\home\\\\minori\\\\git\\\\Galaxy_Mahjong\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"btn-space\" }\nconst _hoisted_2 = [\"disabled\", \"hidden\"]\nconst _hoisted_3 = {\n  key: 0,\n  class: \"spinner-border-sm spinner-border text-primary\",\n  role: \"status\"\n}\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"visually-hidden\" }, \"Loading...\", -1)\nconst _hoisted_5 = [\n  _hoisted_4\n]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"button\", {\n      class: \"btn btn-outline-primary\",\n      disabled: !_ctx.canSolveHuleTile,\n      hidden: !_ctx.canSolveHuleTile,\n      onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.solveWaitTiles && _ctx.solveWaitTiles(...args)))\n    }, \" 上がり牌を検索する \", 8, _hoisted_2),\n    (_ctx.isSolving)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _hoisted_5))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { Store } from 'vuex'\r\nimport { State } from '@vue/runtime-core'\r\nimport { useStore } from '@/store/store'\r\nimport { MUTATION } from '@/store/mutationType'\r\n\r\nconst worker = new Worker(new URL('../../workers/solve_hule_tile.worker.ts', import.meta.url))\r\n\r\n@Options({\r\n  components: {\r\n  }\r\n})\r\nexport default class SolveHuleTileButton extends Vue {\r\n  store!:Store<State>\r\n  isSolving = false\r\n\r\n  created ():void {\r\n    this.store = useStore()\r\n  }\r\n\r\n  get canSolveHuleTile ():boolean {\r\n    const tilesCount:number = this.store.state.mahjongHands.length\r\n    return !!([1, 4, 7, 10, 13].find(n => n === tilesCount))\r\n  }\r\n\r\n  public solveWaitTiles ():void {\r\n    this.isSolving = true\r\n    const tiles = this.store.state.mahjongHands.map(([t, n]) => t)\r\n\r\n    // リスナー\r\n    worker.addEventListener('message', (ev) => {\r\n      // TODO: 型情報が失われているので危険\r\n      const waitPatterns = ev.data\r\n      if (waitPatterns.length === 0) {\r\n        window.alert('テンパイしてませんでした')\r\n      }\r\n      this.store.commit(MUTATION.setSolvedHulePatterns, waitPatterns)\r\n      this.isSolving = false\r\n    })\r\n\r\n    worker.postMessage(JSON.stringify(tiles))\r\n  }\r\n}\r\n","import { render } from \"./solve_hule_tile_button.vue?vue&type=template&id=e5257a8e&ts=true\"\nimport script from \"./solve_hule_tile_button.vue?vue&type=script&lang=ts\"\nexport * from \"./solve_hule_tile_button.vue?vue&type=script&lang=ts\"\n\nimport \"./solve_hule_tile_button.vue?vue&type=style&index=0&id=e5257a8e&lang=css\"\n\nimport exportComponent from \"C:\\\\home\\\\minori\\\\git\\\\Galaxy_Mahjong\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"hand-display\" }\nconst _hoisted_2 = { class: \"row row-cols-auto\" }\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn btn-outline-danger btn-sm\",\n  \"data-bs-toggle\": \"modal\",\n  \"data-bs-target\": \"#confirmation-clear\"\n}, \" クリア \", -1)\nconst _hoisted_4 = {\n  class: \"modal fade\",\n  id: \"confirmation-clear\",\n  tabindex: \"-1\",\n  \"aria-labelledby\": \"confirmation-modal-label\",\n  \"aria-hidden\": \"true\"\n}\nconst _hoisted_5 = { class: \"modal-dialog\" }\nconst _hoisted_6 = { class: \"modal-content\" }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"modal-header\" }, [\n  /*#__PURE__*/_createElementVNode(\"h5\", {\n    class: \"modal-title\",\n    id: \"confirmation-modal-label\"\n  }, \"手牌のクリア\"),\n  /*#__PURE__*/_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn-close\",\n    \"data-bs-dismiss\": \"modal\",\n    \"aria-label\": \"Close\"\n  })\n], -1)\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"modal-body\" }, \" 手牌を消去しますか？ \", -1)\nconst _hoisted_9 = { class: \"modal-footer\" }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn btn-secondary\",\n  \"data-bs-dismiss\": \"modal\"\n}, \"消去しない\", -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_select_add_tile_mode = _resolveComponent(\"select-add-tile-mode\")!\n  const _component_display_hidden_hand = _resolveComponent(\"display-hidden-hand\")!\n  const _component_display_opend_mianzis = _resolveComponent(\"display-opend-mianzis\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_select_add_tile_mode),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_component_display_hidden_hand, { class: \"col\" }),\n      _createVNode(_component_display_opend_mianzis, { class: \"col\" })\n    ]),\n    _hoisted_3,\n    _createElementVNode(\"div\", _hoisted_4, [\n      _createElementVNode(\"div\", _hoisted_5, [\n        _createElementVNode(\"div\", _hoisted_6, [\n          _hoisted_7,\n          _hoisted_8,\n          _createElementVNode(\"div\", _hoisted_9, [\n            _hoisted_10,\n            _createElementVNode(\"button\", {\n              type: \"button\",\n              class: \"btn btn-primary\",\n              \"data-bs-dismiss\": \"modal\",\n              onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.dropHand && _ctx.dropHand(...args)))\n            }, \"消去する\")\n          ])\n        ])\n      ])\n    ])\n  ]))\n}","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, normalizeClass as _normalizeClass } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_tile_image = _resolveComponent(\"tile-image\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass({ 'big-tile': _ctx.isLargeWidth, 'small-tile': !_ctx.isLargeWidth })\n  }, [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.hand, ([tile, id]) => {\n      return (_openBlock(), _createBlock(_component_tile_image, {\n        key: id,\n        tile: tile,\n        onClick: ($event: any) => (_ctx.removeTile([tile, id])),\n        small: !_ctx.isLargeWidth\n      }, null, 8, [\"tile\", \"onClick\", \"small\"]))\n    }), 128))\n  ], 2))\n}","import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = [\"alt\", \"src\"]\nconst _hoisted_2 = { key: 1 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"span\", null, [\n    (_ctx.imageName)\n      ? (_openBlock(), _createElementBlock(\"img\", {\n          key: 0,\n          alt: _ctx.imageName,\n          src: require(`@/assets/mahjong_tile/${_ctx.imageName}`)\n        }, null, 8, _hoisted_1))\n      : (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"no set image name\"))\n  ]))\n}","\r\nimport { MahjongTile, TileColor } from '@/lib/mahjong'\r\nimport { Options, Vue } from 'vue-class-component'\r\n\r\n@Options({\r\n  props: {\r\n    tile: {\r\n      type: MahjongTile,\r\n      required: false,\r\n      default: null\r\n    },\r\n    small: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    side: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    back: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  }\r\n})\r\nexport default class TileImage extends Vue {\r\n  tile!: MahjongTile | null\r\n  small!:boolean\r\n  side!:boolean\r\n  imageName!: string\r\n  back!: boolean\r\n  created ():void {\r\n    const sizeStr = this.small ? '-s' : '-l'\r\n    const sideStr = this.side ? '-yoko' : ''\r\n    if (this.tile && !this.back) {\r\n      const tileColor = this.tile.color\r\n      const tileNumber = this.tile.number\r\n      const optionStr = (this.tile.option.isGalaxy ? '-g' : '') + (this.tile.option.isRed ? '-r' : '')\r\n      this.imageName = TileColor[tileColor] + tileNumber + optionStr + sizeStr + sideStr + '.png'\r\n    } else {\r\n      this.imageName = 'back' + sizeStr + sideStr + '.png'\r\n    }\r\n  }\r\n}\r\n","import { render } from \"./tile_image.vue?vue&type=template&id=1cb53b9e&ts=true\"\nimport script from \"./tile_image.vue?vue&type=script&lang=ts\"\nexport * from \"./tile_image.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\home\\\\minori\\\\git\\\\Galaxy_Mahjong\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\r\nimport { GalaxyMahjongRule, MahjongTile } from '@/lib/mahjong'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { Store } from 'vuex'\r\nimport { State } from '@vue/runtime-core'\r\nimport { useStore } from '@/store/store'\r\nimport { ACTION, MUTATION } from '@/store/mutationType'\r\n\r\nimport TileImage from '../tile_image.vue'\r\n\r\n@Options({\r\n  components: {\r\n    TileImage\r\n  }\r\n})\r\nexport default class DisplayHiddenHand extends Vue {\r\n  store!:Store<State>\r\n  rule = GalaxyMahjongRule.getInstance()\r\n  isLargeWidth = true\r\n  largeWidthBreakpoints = 1200\r\n\r\n  // !TODO: 副露管理と重複したコード。 mixin でなんとかならない？\r\n  // → vue-mixin-decorator が現在の TypeScript に対応していない\r\n  created ():void {\r\n    this.store = useStore()\r\n    // ブラウザ幅が変った時のイベントを登録\r\n    window.addEventListener('resize', this.handleResize)\r\n    this.handleResize() // 初期値のために一回起動しておく\r\n  }\r\n\r\n  public removeTile (tile:[MahjongTile, number]):void {\r\n    this.store.commit(MUTATION.removeTileFromHand, tile)\r\n  }\r\n\r\n  get hand ():[MahjongTile, number][] {\r\n    return this.store.state.mahjongHands\r\n  }\r\n\r\n  public handleResize ():void {\r\n    const browserWidth = window.innerWidth\r\n    const esc = browserWidth >= this.largeWidthBreakpoints\r\n    if (esc !== this.isLargeWidth) {\r\n      this.store.dispatch(ACTION.replaceHand)\r\n    }\r\n    this.isLargeWidth = esc\r\n  }\r\n}\r\n","import { render } from \"./display_hidden_hand.vue?vue&type=template&id=9edc1572&ts=true\"\nimport script from \"./display_hidden_hand.vue?vue&type=script&lang=ts\"\nexport * from \"./display_hidden_hand.vue?vue&type=script&lang=ts\"\n\nimport \"./display_hidden_hand.vue?vue&type=style&index=0&id=9edc1572&lang=css\"\n\nimport exportComponent from \"C:\\\\home\\\\minori\\\\git\\\\Galaxy_Mahjong\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"div\", {\n      class: _normalizeClass({ 'big-tile': _ctx.isLargeWidth, 'small-tile': !_ctx.isLargeWidth })\n    }, null, 2)\n  ]))\n}","\r\nimport { GalaxyMahjongRule, MahjongTile } from '@/lib/mahjong'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { Store } from 'vuex'\r\nimport { State } from '@vue/runtime-core'\r\nimport { useStore } from '@/store/store'\r\nimport { ACTION, MUTATION } from '@/store/mutationType'\r\n\r\n@Options({\r\n  components: {\r\n  }\r\n})\r\nexport default class DisplayOpendMianzis extends Vue {\r\n  store!:Store<State>\r\n  rule = GalaxyMahjongRule.getInstance()\r\n  isLargeWidth = true\r\n  largeWidthBreakpoints = 1200\r\n\r\n  // !TODO: 手牌管理と重複したコード。 mixin でなんとかならない？\r\n  // → vue-mixin-decorator が現在の TypeScript に対応していない\r\n  created ():void {\r\n    this.store = useStore()\r\n    // ブラウザ幅が変った時のイベントを登録\r\n    window.addEventListener('resize', this.handleResize)\r\n    this.handleResize() // 初期値のために一回起動しておく\r\n  }\r\n\r\n  public removeTile (tile:[MahjongTile, number]):void {\r\n    // other impliment\r\n  }\r\n\r\n  get hule ():[MahjongTile, number][] {\r\n    return this.store.state.mahjongHands\r\n  }\r\n\r\n  public handleResize ():void {\r\n    const browserWidth = window.innerWidth\r\n    const esc = browserWidth >= this.largeWidthBreakpoints\r\n    if (esc !== this.isLargeWidth) {\r\n      this.store.dispatch(ACTION.replaceHand)\r\n    }\r\n    this.isLargeWidth = esc\r\n  }\r\n}\r\n","import { render } from \"./display_opend_mianzis.vue?vue&type=template&id=33ca45c9&ts=true\"\nimport script from \"./display_opend_mianzis.vue?vue&type=script&lang=ts\"\nexport * from \"./display_opend_mianzis.vue?vue&type=script&lang=ts\"\n\nimport \"./display_opend_mianzis.vue?vue&type=style&index=0&id=33ca45c9&lang=css\"\n\nimport exportComponent from \"C:\\\\home\\\\minori\\\\git\\\\Galaxy_Mahjong\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { vModelRadio as _vModelRadio, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"row\" }\nconst _hoisted_2 = { class: \"col-12 col-xl-4 select-hand-or-hulu\" }\nconst _hoisted_3 = { class: \"form-check\" }\nconst _hoisted_4 = [\"value\"]\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"form-check-label\",\n  for: \"selectHandOrHulu\"\n}, \"手牌を選択する\", -1)\nconst _hoisted_6 = { class: \"col-12 col-xl-4 select-hand-or-hulu\" }\nconst _hoisted_7 = { class: \"form-check\" }\nconst _hoisted_8 = [\"value\"]\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"form-check-label\",\n  for: \"selectHandOrHulu\"\n}, \"副露を作成する (明槓できるモード)\", -1)\nconst _hoisted_10 = { class: \"col-12 col-xl-4 select-hand-or-hulu\" }\nconst _hoisted_11 = { class: \"form-check\" }\nconst _hoisted_12 = [\"value\"]\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"form-check-label\",\n  for: \"selectHandOrHulu\"\n}, \"副露を作成する (暗槓できるモード)\", -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"radio\",\n          class: \"form-check-input\",\n          name: \"selectHandOrHulu\",\n          id: \"checkHand\",\n          value: _ctx.addTileMode.hand,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.checkdAddTileMode) = $event)),\n          checked: \"\"\n        }, null, 8, _hoisted_4), [\n          [_vModelRadio, _ctx.checkdAddTileMode]\n        ]),\n        _hoisted_5\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_6, [\n      _createElementVNode(\"div\", _hoisted_7, [\n        _withDirectives(_createElementVNode(\"input\", {\n          class: \"form-check-input\",\n          type: \"radio\",\n          name: \"selectHandOrHulu\",\n          id: \"checkHulu\",\n          value: _ctx.addTileMode.hulu,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.checkdAddTileMode) = $event)),\n          disabled: \"\"\n        }, null, 8, _hoisted_8), [\n          [_vModelRadio, _ctx.checkdAddTileMode]\n        ]),\n        _hoisted_9\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_10, [\n      _createElementVNode(\"div\", _hoisted_11, [\n        _withDirectives(_createElementVNode(\"input\", {\n          class: \"form-check-input\",\n          type: \"radio\",\n          name: \"selectHandOrHulu\",\n          id: \"checkHuluAngang\",\n          value: _ctx.addTileMode.huluWithAngang,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.checkdAddTileMode) = $event)),\n          disabled: \"\"\n        }, null, 8, _hoisted_12), [\n          [_vModelRadio, _ctx.checkdAddTileMode]\n        ]),\n        _hoisted_13\n      ])\n    ])\n  ]))\n}","\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { Store } from 'vuex'\r\nimport { State } from '@vue/runtime-core'\r\nimport { useStore } from '@/store/store'\r\nimport { MUTATION } from '@/store/mutationType'\r\nimport { AddTileMode } from '@/store/store_enum'\r\n\r\n@Options({\r\n  components: {\r\n  },\r\n  watch: {\r\n    checkdAddTileMode (value) {\r\n      this.store.commit(MUTATION.switchAddTileMode, value)\r\n    }\r\n  },\r\n  data () {\r\n    const store = useStore()\r\n    return {\r\n      store\r\n    }\r\n  }\r\n})\r\nexport default class SelectAddTileMode extends Vue {\r\n  addTileMode = AddTileMode\r\n  checkdAddTileMode = AddTileMode.hand\r\n  store!:Store<State>\r\n}\r\n","import { render } from \"./select_add_mode.vue?vue&type=template&id=f54d2fd6&ts=true\"\nimport script from \"./select_add_mode.vue?vue&type=script&lang=ts\"\nexport * from \"./select_add_mode.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\home\\\\minori\\\\git\\\\Galaxy_Mahjong\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { Store } from 'vuex'\r\nimport { State } from '@vue/runtime-core'\r\nimport { useStore } from '@/store/store'\r\nimport { ACTION, MUTATION } from '@/store/mutationType'\r\n\r\nimport DisplayHiddenHand from './display_hidden_hand.vue'\r\nimport DisplayOpendMianzis from './display_opend_mianzis.vue'\r\nimport SelectAddTileMode from './select_add_mode.vue'\r\n\r\n@Options({\r\n  components: {\r\n    DisplayHiddenHand,\r\n    DisplayOpendMianzis,\r\n    SelectAddTileMode\r\n  }\r\n})\r\nexport default class HandDisplay extends Vue {\r\n  store!:Store<State>\r\n\r\n  created ():void {\r\n    this.store = useStore()\r\n  }\r\n\r\n  public dropHand ():void {\r\n    this.store.commit(MUTATION.dropAllHand)\r\n  }\r\n}\r\n","import { render } from \"./hand_display.vue?vue&type=template&id=3622684d&ts=true\"\nimport script from \"./hand_display.vue?vue&type=script&lang=ts\"\nexport * from \"./hand_display.vue?vue&type=script&lang=ts\"\n\nimport \"./hand_display.vue?vue&type=style&index=0&id=3622684d&lang=css\"\n\nimport exportComponent from \"C:\\\\home\\\\minori\\\\git\\\\Galaxy_Mahjong\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, createBlock as _createBlock, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"tile-list container\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"row\"\n}\nconst _hoisted_3 = { class: \"alert alert-danger col\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"16\",\n  height: \"16\",\n  fill: \"currentColor\",\n  class: \"bi bi-exclamation-triangle\",\n  viewBox: \"0 0 16 16\"\n}, [\n  /*#__PURE__*/_createElementVNode(\"path\", { d: \"M7.938 2.016A.13.13 0 0 1 8.002 2a.13.13 0 0 1 .063.016.146.146 0 0 1 .054.057l6.857 11.667c.036.06.035.124.002.183a.163.163 0 0 1-.054.06.116.116 0 0 1-.066.017H1.146a.115.115 0 0 1-.066-.017.163.163 0 0 1-.054-.06.176.176 0 0 1 .002-.183L7.884 2.073a.147.147 0 0 1 .054-.057zm1.044-.45a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566z\" }),\n  /*#__PURE__*/_createElementVNode(\"path\", { d: \"M7.002 12a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 5.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995z\" })\n], -1)\nconst _hoisted_5 = { class: \"row row-cols-md-2 row-cols-1 tile-row\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_tile_image = _resolveComponent(\"tile-image\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_ctx.showAlert)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", _hoisted_3, [\n            _hoisted_4,\n            _createTextVNode(\" \" + _toDisplayString(_ctx.alertMessage), 1)\n          ])\n        ]))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", _hoisted_5, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.displayTiles, (tiles, index) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: index,\n          class: _normalizeClass([\"col tile-col\", { 'tile-col-2': _ctx.tileCol2, 'tile-col-1': _ctx.tileCol1 }])\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(tiles, (tile, idx) => {\n            return (_openBlock(), _createBlock(_component_tile_image, {\n              small: \"\",\n              key: idx,\n              tile: tile,\n              onClick: ($event: any) => (_ctx.addTile(tile))\n            }, null, 8, [\"tile\", \"onClick\"]))\n          }), 128))\n        ], 2))\n      }), 128))\n    ])\n  ]))\n}","\r\nimport { GalaxyMahjongRule, MahjongRule, MahjongTile, TileColor } from '@/lib/mahjong'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { Store } from 'vuex'\r\nimport { State } from '@vue/runtime-core'\r\nimport { useStore } from '@/store/store'\r\nimport { ACTION, MUTATION } from '@/store/mutationType'\r\n\r\nimport TileImage from '../tile_image.vue'\r\n\r\n@Options({\r\n  components: {\r\n    TileImage\r\n  }\r\n})\r\nexport default class PickupTileArea extends Vue {\r\n  rule!: MahjongRule\r\n  displayTiles!:MahjongTile[][]\r\n  browserWidth!: number\r\n  tileCol2 = true\r\n  tileCol1 = false\r\n  readonly mediumBreakpoints = 768\r\n  store!:Store<State>\r\n  showAlert = false\r\n  alertMessage = ''\r\n\r\n  created ():void {\r\n    this.store = useStore()\r\n    this.rule = this.store.state.rule\r\n    const allTiles = this.rule.getAllTiles()\r\n    const compareByNumber = this.rule.compareTileByNumber\r\n\r\n    // ブラウザ幅が変った時のイベントを登録\r\n    window.addEventListener('resize', this.handleResize)\r\n    this.handleResize() // 初期値のために一回起動しておく\r\n\r\n    // 牌一覧に並べる牌を格納する\r\n    // TODO: 多分一般化できる。ルールに依存しない形にする\r\n    this.displayTiles = []\r\n    // 萬子通常牌\r\n    this.displayTiles.push(\r\n      allTiles.filter(t => t.color === TileColor.wanzi && !t.option.isGalaxy)\r\n        .sort(compareByNumber)\r\n    )\r\n    // 萬子銀河牌\r\n    this.displayTiles.push(\r\n      allTiles.filter(t => t.color === TileColor.wanzi && t.option.isGalaxy)\r\n        .sort(compareByNumber)\r\n    )\r\n    // 筒子通常牌\r\n    this.displayTiles.push(\r\n      allTiles.filter(t => t.color === TileColor.tongzi && !t.option.isGalaxy)\r\n        .sort(compareByNumber)\r\n    )\r\n    // 筒子銀河牌\r\n    this.displayTiles.push(\r\n      allTiles.filter(t => t.color === TileColor.tongzi && t.option.isGalaxy)\r\n        .sort(compareByNumber)\r\n    )\r\n    // 索子通常牌\r\n    this.displayTiles.push(\r\n      allTiles.filter(t => t.color === TileColor.siozi && !t.option.isGalaxy)\r\n        .sort(compareByNumber)\r\n    )\r\n    // 索子銀河牌\r\n    this.displayTiles.push(\r\n      allTiles.filter(t => t.color === TileColor.siozi && t.option.isGalaxy)\r\n        .sort(compareByNumber)\r\n    )\r\n    // 字牌通常牌\r\n    this.displayTiles.push(\r\n      allTiles.filter(t => t.color === TileColor.feng && !t.option.isGalaxy)\r\n        .sort(compareByNumber)\r\n        .concat(\r\n          allTiles.filter(t => t.color === TileColor.sanyuan && !t.option.isGalaxy)\r\n            .sort(compareByNumber)\r\n        )\r\n    )\r\n    // 字牌銀河牌\r\n    this.displayTiles.push(\r\n      allTiles.filter(t => t.color === TileColor.feng && t.option.isGalaxy)\r\n        .sort(compareByNumber)\r\n        .concat(\r\n          allTiles.filter(t => t.color === TileColor.sanyuan && t.option.isGalaxy)\r\n            .sort(compareByNumber)\r\n        )\r\n    )\r\n  }\r\n\r\n  public async addTile (tile:MahjongTile):Promise<void> {\r\n    this.showAlert = false\r\n    const handTile:MahjongTile[] = await this.store.dispatch(ACTION.getAllHand)\r\n    // 普通の麻雀でもいいように色と数だけ比べる\r\n    const sameTile = handTile.filter(t => tile.color === t.color && tile.number === t.number)\r\n    if (sameTile.length >= 4) {\r\n      this.alertMessage = '既に4枚の同種牌を選択しています'\r\n      this.showAlert = true\r\n      return\r\n    }\r\n    if (handTile.length >= 13) {\r\n      this.alertMessage = '手牌が13枚いっぱいです'\r\n      this.showAlert = true\r\n      return\r\n    }\r\n    this.store.commit(MUTATION.addTileToHand, tile)\r\n  }\r\n\r\n  public handleResize ():void {\r\n    this.browserWidth = window.innerWidth\r\n    this.tileCol1 = this.browserWidth < this.mediumBreakpoints\r\n    this.tileCol2 = this.browserWidth >= this.mediumBreakpoints\r\n  }\r\n}\r\n","import { render } from \"./pickup_tile_area.vue?vue&type=template&id=29633988&ts=true\"\nimport script from \"./pickup_tile_area.vue?vue&type=script&lang=ts\"\nexport * from \"./pickup_tile_area.vue?vue&type=script&lang=ts\"\n\nimport \"./pickup_tile_area.vue?vue&type=style&index=0&id=29633988&lang=css\"\n\nimport exportComponent from \"C:\\\\home\\\\minori\\\\git\\\\Galaxy_Mahjong\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_solved_hand_combination_display = _resolveComponent(\"solved-hand-combination-display\")!\n  const _component_solved_hule_tile_display = _resolveComponent(\"solved-hule-tile-display\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    (_ctx.displayMode === _ctx.solveMode.hand)\n      ? (_openBlock(), _createBlock(_component_solved_hand_combination_display, { key: 0 }))\n      : _createCommentVNode(\"\", true),\n    (_ctx.displayMode === _ctx.solveMode.waitTile)\n      ? (_openBlock(), _createBlock(_component_solved_hule_tile_display, { key: 1 }))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", null, \" 面子構成解析結果を表示するところ \"))\n}","\r\nimport { Options, Vue } from 'vue-class-component'\r\n\r\n@Options({\r\n  components: {\r\n  }\r\n})\r\nexport default class SolvedHandCombinationDisplay extends Vue {\r\n}\r\n","import { render } from \"./solved_hand_combination_display.vue?vue&type=template&id=072b6ee3&ts=true\"\nimport script from \"./solved_hand_combination_display.vue?vue&type=script&lang=ts\"\nexport * from \"./solved_hand_combination_display.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\home\\\\minori\\\\git\\\\Galaxy_Mahjong\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"row\" }\nconst _hoisted_2 = { class: \"col\" }\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" 上がり牌 : \")\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1)\nconst _hoisted_5 = { key: 0 }\nconst _hoisted_6 = { class: \"row row-cols-auto\" }\nconst _hoisted_7 = { class: \"col\" }\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_tile_image = _resolveComponent(\"tile-image\")!\n  const _component_display_mianzi = _resolveComponent(\"display-mianzi\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _hoisted_3,\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.waitTiles, (tile) => {\n          return (_openBlock(), _createBlock(_component_tile_image, {\n            key: tile[1],\n            tile: tile[0],\n            small: \"\",\n            onClick: ($event: any) => (_ctx.turnOnHuleTileFilter(tile[0]))\n          }, null, 8, [\"tile\", \"onClick\"]))\n        }), 128)),\n        _createElementVNode(\"button\", {\n          type: \"button\",\n          class: \"btn btn-outline-info btn-sm\",\n          onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.turnOffHuleTileFilter && _ctx.turnOffHuleTileFilter(...args)))\n        }, _toDisplayString(_ctx.filterButtonMessage), 1)\n      ])\n    ]),\n    _hoisted_4,\n    _createElementVNode(\"div\", null, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.solvedHuleTiles, (hulePattern) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: hulePattern[3]\n        }, [\n          (!_ctx.filterMode || _ctx.isContainedHuleTile(hulePattern, _ctx.filterTile))\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                _createElementVNode(\"div\", _hoisted_6, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(hulePattern[0], (mianzi, idx) => {\n                    return (_openBlock(), _createBlock(_component_display_mianzi, {\n                      key: idx,\n                      mianzi: () => mianzi,\n                      small: \"\",\n                      showColor: \"\",\n                      class: \"col\"\n                    }, null, 8, [\"mianzi\"]))\n                  }), 128)),\n                  _createElementVNode(\"span\", _hoisted_7, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(hulePattern[1], (tile, idxT) => {\n                      return (_openBlock(), _createBlock(_component_tile_image, {\n                        key: idxT,\n                        tile: tile,\n                        small: \"\"\n                      }, null, 8, [\"tile\"]))\n                    }), 128)),\n                    _createTextVNode(\" \" + _toDisplayString(_ctx.formStrings[hulePattern[2]]), 1)\n                  ])\n                ]),\n                _hoisted_8\n              ]))\n            : _createCommentVNode(\"\", true)\n        ]))\n      }), 128))\n    ])\n  ]))\n}","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { class: \"mianzi\" }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = { key: 1 }\nconst _hoisted_4 = {\n  key: 2,\n  class: \"fs-6\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_tile_image = _resolveComponent(\"tile-image\")!\n\n  return (_openBlock(), _createElementBlock(\"span\", _hoisted_1, [\n    (_ctx._mianzi.kind === _ctx.mianziKind.kangzi && !_ctx._mianzi.isOpend)\n      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, [\n          _createVNode(_component_tile_image, {\n            back: \"\",\n            small: _ctx.small\n          }, null, 8, [\"small\"]),\n          _createVNode(_component_tile_image, {\n            tile: _ctx.displayTiles[1][0],\n            small: _ctx.small\n          }, null, 8, [\"tile\", \"small\"]),\n          _createVNode(_component_tile_image, {\n            tile: _ctx.displayTiles[2][0],\n            small: _ctx.small\n          }, null, 8, [\"tile\", \"small\"]),\n          _createVNode(_component_tile_image, {\n            back: \"\",\n            small: _ctx.small\n          }, null, 8, [\"small\"])\n        ]))\n      : (_openBlock(), _createElementBlock(\"span\", _hoisted_3, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.displayTiles, (tile) => {\n            return (_openBlock(), _createBlock(_component_tile_image, {\n              key: tile[1],\n              tile: tile[0],\n              side: _ctx._mianzi.isOpend && tile[1] === 0,\n              small: _ctx.small\n            }, null, 8, [\"tile\", \"side\", \"small\"]))\n          }), 128))\n        ])),\n    (_ctx.showColor)\n      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString(_ctx.displayColor), 1))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { IMianzi, MahjongTile, MianziKind, TileColor } from '@/lib/mahjong'\r\nimport TileImage from '../tile_image.vue'\r\n\r\n@Options({\r\n  props: {\r\n    mianzi: {\r\n      type: Object as () => IMianzi,\r\n      required: true\r\n    },\r\n    small: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false\r\n    },\r\n    showColor: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  components: {\r\n    TileImage\r\n  }\r\n})\r\nexport default class DisplayMianzi extends Vue {\r\n  mianzi!: () => IMianzi\r\n  small!:boolean\r\n  _mianzi!: IMianzi\r\n  displayTiles!:[MahjongTile, number][]\r\n  mianziKind = MianziKind\r\n  showColor!: boolean\r\n  displayColor!:string\r\n\r\n  created ():void {\r\n    this._mianzi = this.mianzi()\r\n    this.displayTiles = this._mianzi.tiles.map((t, i) => [t, i])\r\n    this.displayColor = ''\r\n    if (this._mianzi.color === TileColor.sanyuan) {\r\n      this.displayColor = ['白', '發', '中'][this._mianzi.number - 1]\r\n    } else if (this._mianzi.color === TileColor.feng) {\r\n      this.displayColor = ['東', '南', '西', '北'][this._mianzi.number - 1]\r\n    } else {\r\n      this.displayColor = ['萬', '筒', '索'][this._mianzi.color]\r\n    }\r\n    this.displayColor = '(' + this.displayColor + ')'\r\n  }\r\n}\r\n","import { render } from \"./display_mianzi.vue?vue&type=template&id=6f27ac48&ts=true\"\nimport script from \"./display_mianzi.vue?vue&type=script&lang=ts\"\nexport * from \"./display_mianzi.vue?vue&type=script&lang=ts\"\n\nimport \"./display_mianzi.vue?vue&type=style&index=0&id=6f27ac48&lang=css\"\n\nimport exportComponent from \"C:\\\\home\\\\minori\\\\git\\\\Galaxy_Mahjong\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { Store } from 'vuex'\r\nimport { State } from '@vue/runtime-core'\r\nimport { useStore } from '@/store/store'\r\nimport { IMianzi, MahjongTile, waitForm } from '@/lib/mahjong'\r\n\r\nimport DisplayMianzi from './display_mianzi.vue'\r\nimport TileImage from '../tile_image.vue'\r\nimport { _ } from '@/lib/util/util'\r\nimport { ACTION } from '@/store/mutationType'\r\n\r\n@Options({\r\n  components: {\r\n    DisplayMianzi,\r\n    TileImage\r\n  }\r\n})\r\nexport default class SolvedHuleTileDisplay extends Vue {\r\n  store!:Store<State>\r\n  uid = 0\r\n  waitUniqTiles!:[MahjongTile, number][]\r\n  formStrings = ['両面', '嵌張', '辺張', '単騎', '双椪', 'その他']\r\n  filterMode = false\r\n  filterButtonMessage = '牌タップで絞りこみ'\r\n  filterTile!:MahjongTile\r\n  created ():void {\r\n    this.store = useStore()\r\n    this.waitUniqTiles = []\r\n  }\r\n\r\n  public turnOnHuleTileFilter (tile:MahjongTile):void {\r\n    this.filterMode = false\r\n    this.filterTile = tile\r\n    this.filterMode = true\r\n    this.filterButtonMessage = 'フィルター解除'\r\n  }\r\n\r\n  public turnOffHuleTileFilter ():void {\r\n    this.filterMode = false\r\n    this.filterButtonMessage = '牌タップで絞りこみ'\r\n  }\r\n\r\n  public isContainedHuleTile (pattern:[IMianzi[], MahjongTile[], waitForm, number], tile:MahjongTile):boolean {\r\n    return _.isContained(pattern[1], tile, (ta, tb) => this.store.state.rule.compareTileByColor(ta, tb) === 0)\r\n  }\r\n\r\n  public getUid ():number {\r\n    this.uid = this.uid + 1\r\n    return this.uid\r\n  }\r\n\r\n  get solvedHuleTiles ():[IMianzi[], MahjongTile[], waitForm, number][] {\r\n    this.turnOffHuleTileFilter()\r\n    return this.store.state.solvedHuleTile\r\n  }\r\n\r\n  get waitTiles ():[MahjongTile, number][] {\r\n    let waitTiles:[MahjongTile, number][] =\r\n      this.store.state.solvedHuleTile\r\n        .map(([ms, ts, f, n]) => ts)\r\n        .flat().map(t => [t, this.getUid()])\r\n    waitTiles = waitTiles.sort(([ta, na], [tb, nb]) => this.store.state.rule.compareTileByColor(ta, tb))\r\n    waitTiles = _.uniq(waitTiles, ([ta, na], [tb, nb]) => this.store.state.rule.compareTileByColor(ta, tb))\r\n    return waitTiles\r\n  }\r\n}\r\n","import { render } from \"./solved_hule_tile_display.vue?vue&type=template&id=45fb1f8a&ts=true\"\nimport script from \"./solved_hule_tile_display.vue?vue&type=script&lang=ts\"\nexport * from \"./solved_hule_tile_display.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\home\\\\minori\\\\git\\\\Galaxy_Mahjong\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { SolveMode } from '@/store/store_enum'\r\nimport { Store } from 'vuex'\r\nimport { State } from '@vue/runtime-core'\r\nimport { useStore } from '@/store/store'\r\n\r\nimport SolvedHandCombinationDisplay from './solved_hand_combination_display.vue'\r\nimport SolvedHuleTileDisplay from './solved_hule_tile_display.vue'\r\n\r\n@Options({\r\n  components: {\r\n    SolvedHandCombinationDisplay,\r\n    SolvedHuleTileDisplay\r\n  }\r\n})\r\nexport default class SolvedHandView extends Vue {\r\n  solveMode = SolveMode\r\n  store!:Store<State>\r\n\r\n  created ():void {\r\n    this.store = useStore()\r\n  }\r\n\r\n  get displayMode ():SolveMode {\r\n    return this.store.state.solveMode\r\n  }\r\n}\r\n","import { render } from \"./solved_hand_view.vue?vue&type=template&id=460eabce&ts=true\"\nimport script from \"./solved_hand_view.vue?vue&type=script&lang=ts\"\nexport * from \"./solved_hand_view.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\home\\\\minori\\\\git\\\\Galaxy_Mahjong\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { Store } from 'vuex'\r\nimport { State } from '@vue/runtime-core'\r\nimport { useStore } from '@/store/store'\r\nimport { MUTATION } from '@/store/mutationType'\r\nimport { GalaxyMahjongRule } from '@/lib/mahjong'\r\n\r\nimport SolveHandButton from './solve_hand_button.vue'\r\nimport SolveHuleTileButton from './solve_hule_tile_button.vue'\r\nimport HandDisplay from './hand_display.vue'\r\nimport PickupTileArea from './pickup_tile_area.vue'\r\nimport SolvedHandView from './solved_hand_view.vue'\r\n\r\n@Options({\r\n  components: {\r\n    SolveHandButton,\r\n    SolveHuleTileButton,\r\n    HandDisplay,\r\n    PickupTileArea,\r\n    SolvedHandView\r\n  }\r\n})\r\nexport default class GalaxyMahjong extends Vue {\r\n  store!: Store<State>\r\n  created ():void {\r\n    this.store = useStore()\r\n    this.store.commit(MUTATION.setMahjongRule, GalaxyMahjongRule.getInstance())\r\n  }\r\n}\r\n","import { render } from \"./galaxy_mahjong.vue?vue&type=template&id=12f52df7&ts=true\"\nimport script from \"./galaxy_mahjong.vue?vue&type=script&lang=ts\"\nexport * from \"./galaxy_mahjong.vue?vue&type=script&lang=ts\"\n\nimport \"./galaxy_mahjong.vue?vue&type=style&index=0&id=12f52df7&lang=css\"\n\nimport exportComponent from \"C:\\\\home\\\\minori\\\\git\\\\Galaxy_Mahjong\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\r\nimport { Options, Vue } from 'vue-class-component'\r\n\r\nimport GalaxyMahjong from './components/galaxy_mahjong/galaxy_mahjong.vue'\r\n\r\n@Options({\r\n  components: {\r\n    GalaxyMahjong\r\n  }\r\n})\r\nexport default class App extends Vue {\r\n}\r\n","import { render } from \"./App.vue?vue&type=template&id=183784f4&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=183784f4&lang=css\"\n\nimport exportComponent from \"C:\\\\home\\\\minori\\\\git\\\\Galaxy_Mahjong\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport { key, store } from './store/store'\r\nimport 'bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst app = createApp(App)\r\napp.use(store, key)\r\napp.mount('#app')\r\n","var map = {\n\t\"./back-l-yoko.png\": 5087,\n\t\"./back-l.png\": 5115,\n\t\"./back-s-yoko.png\": 7548,\n\t\"./back-s.png\": 7821,\n\t\"./feng1-g-l-yoko.png\": 2287,\n\t\"./feng1-g-l.png\": 6678,\n\t\"./feng1-g-s-yoko.png\": 7526,\n\t\"./feng1-g-s.png\": 2337,\n\t\"./feng1-l-yoko.png\": 8649,\n\t\"./feng1-l.png\": 4637,\n\t\"./feng1-s-yoko.png\": 226,\n\t\"./feng1-s.png\": 5548,\n\t\"./feng2-g-l-yoko.png\": 3804,\n\t\"./feng2-g-l.png\": 7962,\n\t\"./feng2-g-s-yoko.png\": 3234,\n\t\"./feng2-g-s.png\": 4623,\n\t\"./feng2-l-yoko.png\": 4698,\n\t\"./feng2-l.png\": 931,\n\t\"./feng2-s-yoko.png\": 6992,\n\t\"./feng2-s.png\": 8586,\n\t\"./feng3-g-l-yoko.png\": 4156,\n\t\"./feng3-g-l.png\": 2167,\n\t\"./feng3-g-s-yoko.png\": 2234,\n\t\"./feng3-g-s.png\": 8457,\n\t\"./feng3-l-yoko.png\": 2449,\n\t\"./feng3-l.png\": 8869,\n\t\"./feng3-s-yoko.png\": 8948,\n\t\"./feng3-s.png\": 8986,\n\t\"./feng4-g-l-yoko.png\": 7801,\n\t\"./feng4-g-l.png\": 170,\n\t\"./feng4-g-s-yoko.png\": 8147,\n\t\"./feng4-g-s.png\": 6549,\n\t\"./feng4-l-yoko.png\": 6190,\n\t\"./feng4-l.png\": 9018,\n\t\"./feng4-s-yoko.png\": 7751,\n\t\"./feng4-s.png\": 395,\n\t\"./sanyuan1-g-l-yoko.png\": 5075,\n\t\"./sanyuan1-g-l.png\": 7883,\n\t\"./sanyuan1-g-s-yoko.png\": 2585,\n\t\"./sanyuan1-g-s.png\": 1630,\n\t\"./sanyuan1-l-yoko.png\": 2890,\n\t\"./sanyuan1-l.png\": 7160,\n\t\"./sanyuan1-s-yoko.png\": 7031,\n\t\"./sanyuan1-s.png\": 343,\n\t\"./sanyuan2-g-l-yoko.png\": 5621,\n\t\"./sanyuan2-g-l.png\": 1105,\n\t\"./sanyuan2-g-s-yoko.png\": 3347,\n\t\"./sanyuan2-g-s.png\": 8093,\n\t\"./sanyuan2-l-yoko.png\": 5187,\n\t\"./sanyuan2-l.png\": 5004,\n\t\"./sanyuan2-s-yoko.png\": 5275,\n\t\"./sanyuan2-s.png\": 9526,\n\t\"./sanyuan3-g-l-yoko.png\": 2359,\n\t\"./sanyuan3-g-l.png\": 5897,\n\t\"./sanyuan3-g-s-yoko.png\": 3007,\n\t\"./sanyuan3-g-s.png\": 1901,\n\t\"./sanyuan3-l-yoko.png\": 900,\n\t\"./sanyuan3-l.png\": 5161,\n\t\"./sanyuan3-s-yoko.png\": 5372,\n\t\"./sanyuan3-s.png\": 2398,\n\t\"./siozi1-g-l-yoko.png\": 9871,\n\t\"./siozi1-g-l.png\": 9049,\n\t\"./siozi1-g-s-yoko.png\": 6802,\n\t\"./siozi1-g-s.png\": 644,\n\t\"./siozi1-l-yoko.png\": 2170,\n\t\"./siozi1-l.png\": 1364,\n\t\"./siozi1-s-yoko.png\": 8159,\n\t\"./siozi1-s.png\": 6798,\n\t\"./siozi2-g-l-yoko.png\": 7606,\n\t\"./siozi2-g-l.png\": 2951,\n\t\"./siozi2-g-s-yoko.png\": 553,\n\t\"./siozi2-g-s.png\": 7002,\n\t\"./siozi2-l-yoko.png\": 8295,\n\t\"./siozi2-l.png\": 2761,\n\t\"./siozi2-s-yoko.png\": 8231,\n\t\"./siozi2-s.png\": 4490,\n\t\"./siozi3-g-l-yoko.png\": 8609,\n\t\"./siozi3-g-l.png\": 4293,\n\t\"./siozi3-g-s-yoko.png\": 5940,\n\t\"./siozi3-g-s.png\": 6845,\n\t\"./siozi3-l-yoko.png\": 6841,\n\t\"./siozi3-l.png\": 580,\n\t\"./siozi3-s-yoko.png\": 7898,\n\t\"./siozi3-s.png\": 9413,\n\t\"./siozi4-g-l-yoko.png\": 7680,\n\t\"./siozi4-g-l.png\": 8885,\n\t\"./siozi4-g-s-yoko.png\": 9055,\n\t\"./siozi4-g-s.png\": 2282,\n\t\"./siozi4-l-yoko.png\": 6874,\n\t\"./siozi4-l.png\": 6431,\n\t\"./siozi4-s-yoko.png\": 1875,\n\t\"./siozi4-s.png\": 1899,\n\t\"./siozi5-g-l-yoko.png\": 1751,\n\t\"./siozi5-g-l.png\": 3774,\n\t\"./siozi5-g-s-yoko.png\": 9923,\n\t\"./siozi5-g-s.png\": 5545,\n\t\"./siozi5-l-yoko.png\": 7551,\n\t\"./siozi5-l.png\": 6468,\n\t\"./siozi5-r-l-yoko.png\": 7637,\n\t\"./siozi5-r-l.png\": 9947,\n\t\"./siozi5-r-s-yoko.png\": 5625,\n\t\"./siozi5-r-s.png\": 6968,\n\t\"./siozi5-s-yoko.png\": 112,\n\t\"./siozi5-s.png\": 4459,\n\t\"./siozi6-g-l-yoko.png\": 1526,\n\t\"./siozi6-g-l.png\": 6861,\n\t\"./siozi6-g-s-yoko.png\": 2940,\n\t\"./siozi6-g-s.png\": 6062,\n\t\"./siozi6-l-yoko.png\": 8560,\n\t\"./siozi6-l.png\": 8035,\n\t\"./siozi6-s-yoko.png\": 6016,\n\t\"./siozi6-s.png\": 3711,\n\t\"./siozi7-g-l-yoko.png\": 4566,\n\t\"./siozi7-g-l.png\": 4008,\n\t\"./siozi7-g-s-yoko.png\": 6680,\n\t\"./siozi7-g-s.png\": 1783,\n\t\"./siozi7-l-yoko.png\": 1742,\n\t\"./siozi7-l.png\": 617,\n\t\"./siozi7-s-yoko.png\": 1194,\n\t\"./siozi7-s.png\": 7669,\n\t\"./siozi8-g-l-yoko.png\": 9305,\n\t\"./siozi8-g-l.png\": 7459,\n\t\"./siozi8-g-s-yoko.png\": 6663,\n\t\"./siozi8-g-s.png\": 4829,\n\t\"./siozi8-l-yoko.png\": 9522,\n\t\"./siozi8-l.png\": 7691,\n\t\"./siozi8-s-yoko.png\": 9213,\n\t\"./siozi8-s.png\": 7030,\n\t\"./siozi9-g-l-yoko.png\": 2636,\n\t\"./siozi9-g-l.png\": 1261,\n\t\"./siozi9-g-s-yoko.png\": 3560,\n\t\"./siozi9-g-s.png\": 9919,\n\t\"./siozi9-l-yoko.png\": 5026,\n\t\"./siozi9-l.png\": 2381,\n\t\"./siozi9-s-yoko.png\": 1007,\n\t\"./siozi9-s.png\": 5172,\n\t\"./tongzi1-g-l-yoko.png\": 3496,\n\t\"./tongzi1-g-l.png\": 9334,\n\t\"./tongzi1-g-s-yoko.png\": 785,\n\t\"./tongzi1-g-s.png\": 3044,\n\t\"./tongzi1-l-yoko.png\": 2970,\n\t\"./tongzi1-l.png\": 1335,\n\t\"./tongzi1-s-yoko.png\": 716,\n\t\"./tongzi1-s.png\": 7772,\n\t\"./tongzi2-g-l-yoko.png\": 9811,\n\t\"./tongzi2-g-l.png\": 5399,\n\t\"./tongzi2-g-s-yoko.png\": 5101,\n\t\"./tongzi2-g-s.png\": 669,\n\t\"./tongzi2-l-yoko.png\": 1757,\n\t\"./tongzi2-l.png\": 3330,\n\t\"./tongzi2-s-yoko.png\": 1547,\n\t\"./tongzi2-s.png\": 4537,\n\t\"./tongzi3-g-l-yoko.png\": 9282,\n\t\"./tongzi3-g-l.png\": 1674,\n\t\"./tongzi3-g-s-yoko.png\": 571,\n\t\"./tongzi3-g-s.png\": 9802,\n\t\"./tongzi3-l-yoko.png\": 6138,\n\t\"./tongzi3-l.png\": 8556,\n\t\"./tongzi3-s-yoko.png\": 8862,\n\t\"./tongzi3-s.png\": 6467,\n\t\"./tongzi4-g-l-yoko.png\": 756,\n\t\"./tongzi4-g-l.png\": 3504,\n\t\"./tongzi4-g-s-yoko.png\": 1068,\n\t\"./tongzi4-g-s.png\": 6679,\n\t\"./tongzi4-l-yoko.png\": 1715,\n\t\"./tongzi4-l.png\": 532,\n\t\"./tongzi4-s-yoko.png\": 5837,\n\t\"./tongzi4-s.png\": 6773,\n\t\"./tongzi5-g-l-yoko.png\": 8211,\n\t\"./tongzi5-g-l.png\": 1498,\n\t\"./tongzi5-g-s-yoko.png\": 4665,\n\t\"./tongzi5-g-s.png\": 6942,\n\t\"./tongzi5-l-yoko.png\": 9896,\n\t\"./tongzi5-l.png\": 9942,\n\t\"./tongzi5-r-g-l-yoko.png\": 9274,\n\t\"./tongzi5-r-l-yoko.png\": 1401,\n\t\"./tongzi5-r-l.png\": 1990,\n\t\"./tongzi5-r-s-yoko.png\": 5589,\n\t\"./tongzi5-r-s.png\": 1882,\n\t\"./tongzi5-s-yoko.png\": 8797,\n\t\"./tongzi5-s.png\": 1972,\n\t\"./tongzi6-g-l-yoko.png\": 9480,\n\t\"./tongzi6-g-l.png\": 958,\n\t\"./tongzi6-g-s-yoko.png\": 3275,\n\t\"./tongzi6-g-s.png\": 6559,\n\t\"./tongzi6-l-yoko.png\": 9467,\n\t\"./tongzi6-l.png\": 7959,\n\t\"./tongzi6-s-yoko.png\": 9505,\n\t\"./tongzi6-s.png\": 5794,\n\t\"./tongzi7-g-l-yoko.png\": 3683,\n\t\"./tongzi7-g-l.png\": 1265,\n\t\"./tongzi7-g-s-yoko.png\": 3168,\n\t\"./tongzi7-g-s.png\": 4246,\n\t\"./tongzi7-l-yoko.png\": 4458,\n\t\"./tongzi7-l.png\": 1406,\n\t\"./tongzi7-s-yoko.png\": 6893,\n\t\"./tongzi7-s.png\": 7187,\n\t\"./tongzi8-g-l-yoko.png\": 9014,\n\t\"./tongzi8-g-l.png\": 4693,\n\t\"./tongzi8-g-s-yoko.png\": 1378,\n\t\"./tongzi8-g-s.png\": 584,\n\t\"./tongzi8-l-yoko.png\": 6503,\n\t\"./tongzi8-l.png\": 2471,\n\t\"./tongzi8-s-yoko.png\": 7224,\n\t\"./tongzi8-s.png\": 5610,\n\t\"./tongzi9-g-l-yoko.png\": 1019,\n\t\"./tongzi9-g-l.png\": 8773,\n\t\"./tongzi9-g-s-yoko.png\": 8107,\n\t\"./tongzi9-g-s.png\": 8665,\n\t\"./tongzi9-l-yoko.png\": 9444,\n\t\"./tongzi9-l.png\": 6362,\n\t\"./tongzi9-s-yoko.png\": 8507,\n\t\"./tongzi9-s.png\": 3877,\n\t\"./wanzi1-g-l-yoko.png\": 2841,\n\t\"./wanzi1-g-l.png\": 1089,\n\t\"./wanzi1-g-s-yoko.png\": 1864,\n\t\"./wanzi1-g-s.png\": 1446,\n\t\"./wanzi1-l-yoko.png\": 5908,\n\t\"./wanzi1-l.png\": 3909,\n\t\"./wanzi1-s-yoko.png\": 5573,\n\t\"./wanzi1-s.png\": 3468,\n\t\"./wanzi2-g-l-yoko.png\": 3515,\n\t\"./wanzi2-g-l.png\": 5870,\n\t\"./wanzi2-g-s-yoko.png\": 92,\n\t\"./wanzi2-g-s.png\": 685,\n\t\"./wanzi2-l-yoko.png\": 248,\n\t\"./wanzi2-l.png\": 3193,\n\t\"./wanzi2-s-yoko.png\": 6397,\n\t\"./wanzi2-s.png\": 2331,\n\t\"./wanzi3-g-l-yoko.png\": 9639,\n\t\"./wanzi3-g-l.png\": 5667,\n\t\"./wanzi3-g-s-yoko.png\": 9653,\n\t\"./wanzi3-g-s.png\": 4476,\n\t\"./wanzi3-l-yoko.png\": 174,\n\t\"./wanzi3-l.png\": 5000,\n\t\"./wanzi3-s-yoko.png\": 3610,\n\t\"./wanzi3-s.png\": 568,\n\t\"./wanzi4-g-l-yoko.png\": 4255,\n\t\"./wanzi4-g-l.png\": 6171,\n\t\"./wanzi4-g-s-yoko.png\": 4147,\n\t\"./wanzi4-g-s.png\": 1399,\n\t\"./wanzi4-l-yoko.png\": 2253,\n\t\"./wanzi4-l.png\": 412,\n\t\"./wanzi4-s-yoko.png\": 7811,\n\t\"./wanzi4-s.png\": 53,\n\t\"./wanzi5-g-l-yoko.png\": 1278,\n\t\"./wanzi5-g-l.png\": 6075,\n\t\"./wanzi5-g-s-yoko.png\": 2555,\n\t\"./wanzi5-g-s.png\": 2131,\n\t\"./wanzi5-l-yoko.png\": 6489,\n\t\"./wanzi5-l.png\": 1462,\n\t\"./wanzi5-r-g-l-yoko.png\": 7127,\n\t\"./wanzi5-r-l-yoko.png\": 9382,\n\t\"./wanzi5-r-l.png\": 5664,\n\t\"./wanzi5-r-s-yoko.png\": 5694,\n\t\"./wanzi5-r-s.png\": 2817,\n\t\"./wanzi5-s-yoko.png\": 1637,\n\t\"./wanzi5-s.png\": 2866,\n\t\"./wanzi6-g-l-yoko.png\": 9200,\n\t\"./wanzi6-g-l.png\": 1204,\n\t\"./wanzi6-g-s-yoko.png\": 5554,\n\t\"./wanzi6-g-s.png\": 5117,\n\t\"./wanzi6-l-yoko.png\": 8750,\n\t\"./wanzi6-l.png\": 3013,\n\t\"./wanzi6-s-yoko.png\": 6066,\n\t\"./wanzi6-s.png\": 2245,\n\t\"./wanzi7-g-l-yoko.png\": 4779,\n\t\"./wanzi7-g-l.png\": 1781,\n\t\"./wanzi7-g-s-yoko.png\": 1310,\n\t\"./wanzi7-g-s.png\": 8952,\n\t\"./wanzi7-l-yoko.png\": 9077,\n\t\"./wanzi7-l.png\": 2441,\n\t\"./wanzi7-s-yoko.png\": 4206,\n\t\"./wanzi7-s.png\": 6372,\n\t\"./wanzi8-g-l-yoko.png\": 1923,\n\t\"./wanzi8-g-l.png\": 5144,\n\t\"./wanzi8-g-s-yoko.png\": 4158,\n\t\"./wanzi8-g-s.png\": 3878,\n\t\"./wanzi8-l-yoko.png\": 2836,\n\t\"./wanzi8-l.png\": 7112,\n\t\"./wanzi8-s-yoko.png\": 6664,\n\t\"./wanzi8-s.png\": 901,\n\t\"./wanzi9-g-l-yoko.png\": 7524,\n\t\"./wanzi9-g-l.png\": 8356,\n\t\"./wanzi9-g-s-yoko.png\": 3191,\n\t\"./wanzi9-g-s.png\": 323,\n\t\"./wanzi9-l-yoko.png\": 4403,\n\t\"./wanzi9-l.png\": 6781,\n\t\"./wanzi9-s-yoko.png\": 1384,\n\t\"./wanzi9-s.png\": 8176\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4271;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + \"7a8b99e4\" + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkgalaxy_mahjong\"] = self[\"webpackChunkgalaxy_mahjong\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(2638); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_galaxy_mahjong","_resolveComponent","_openBlock","_createBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","style","_hoisted_4","class","_hoisted_5","_hoisted_6","_hoisted_7","_createTextVNode","href","target","_component_solve_hand_button","_component_solve_hule_tile_button","_component_hand_display","_component_pickup_tile_area","_component_solved_hand_view","_createElementBlock","_createVNode","_","f","arr","pairs","makePairsFromHead","every","p","makeAllPairsFromHead","length","indexA","indexB","push","index","arrT","arrS","forEach","t","s","map","v","i","_arr","concat","splice","arrA","arrB","compare","ret","a","_arrA","sort","_arrB","this","equalArray","compared","n","_extractAllN","startIndex","takenIs","takenP","taken","remaingArr","_taken","retTaken","remain","compareArray","firstMaterials","shift","m","_formation","conbined","_retConbined","arrHead","cs","hm","_cs","equal","findIndex","ms","extract","out","randomIndex","Math","floor","random","x","TileColor","MahjongTile","constructor","color","number","option","prototype","toString","undefined","flower","str","feng","sanyuan","optionName","charAt","toLowerCase","MahjongTileParserBase","numberdTileMap","symboledTileMap","optionMap","numberdColorChars","Object","keys","join","symboledColorChars","optionChars","regexString","parseTile","tileStr","regex","RegExp","parseResult","match","Error","options","optionArr","split","opt","tileKind","colorChar","parseInt","maxNumber","parseTiles","tilesStr","tiles","tileMap","w","e","b","l","h","GalaxyTileParser","super","g","r","_galaxyTileParserInstance","MianziKind","waitForm","MahjongRule","ma","mb","compareMember","kind","compareTileByNumber","parser","MahjongTileParser","getInstance","NORMAL_TILE_TYPE","generateNormalTileType","ALL_TILE_TYPE","ALL_TILE_SET","provisionAllTileSet","_instance","getAllTiles","getNormalTiles","getAllTileSet","canBeSameTile","tile","expect","canBeNextTile","nextTile","deriveDragon","makeMianzi","isOpend","tileA","tileB","diffNumber","diffColor","optionCompare","compareTileByColor","takeMianziNorm","candidateMianzi","extractAllN","ta","tb","_mianzis","filter","mianzis","_m","remaingTile","mianzi","takeDuizi","takeMianzi","takeGuli","takeRecursivelyXZi","intermediateHand","takeXZi","concatMianzi","takenXZi","candidateHand","currentMianzi","existongConcatMianzi","c","equalSetArray","compareMianzi","solveHand","solveNormalHand","solveExceptionalHand","_intermediateHand","arrangedManzi","ts","remaindHand","mt","takeQiDuizi","takeShisanyao","qiDuizi","duidis","ds","remaingHand","d1","d2","hand","yaojiuPais","danqiss","formation","danqis","uniq","compareMianziKind","asHands","d","missingTile","extractMultiple","solveHuleTile","solveHuleTileCommoon","solveHuleTileExceptionalHand","solveHuleTileCommonMianziFirst","solveHuleTileCommonDuiziFirst","completePartial","takenMianzis","remaingTiles","gulis","guli","none","waitTile","deriveHuleTileCommonFromWait","triedTakeDuizis","conbineMianzisAndTazi","triedMakeTazi","makeTazi","tazi","takenDuiziPatternsFromHand","duizi","remaindTiles","solveHuleTileQiDuizi","solveHuleTileShisanyao","duizis","danqi","m1","m2","shuangPong","t1","t2","quianZhang","bianShang","ligngMain","symboledTileColor","isContained","abs","shoudBeTaziColor","min","takeTazi","_hand","sortedHandPairs","takedTiles","tm","tazis","getMaxNumber","normalTileType","tileSet","GalaxyMahjongRule","isGalaxy","glaxyTiles","redTiles","galaxyInstance","instance","baseTile","targetTile","dragonNumber","maxDoragonNum","dragonNum","numColor","canBeSameAllTile","everyPairAllPairWith","kezi","kangzi","areAllGalaxy","includes","find","everyPairFromHeadWith","shunzi","nonGalaxyTile","isRed","MUTATION","countUp","countDown","setMahjongRule","setUniqNumber","addTileToHand","removeTileFromHand","dropAllHand","switchAddTileMode","setSolvedHulePatterns","ACTION","replaceHand","getAllHand","getUniqNumber","SolveMode","AddTileMode","key","Symbol","store","createStore","state","count","rule","handNumber","mahjongHands","opendMianzis","patialMianzi","addTileMode","solveMode","solvedHand","solvedHuleTile","mutations","num","newHand","na","nb","deepEqual","mode","hulePatterns","actions","context","commit","opendTiles","flat","allHand","useStore","baseUseStore","disabled","canSolveHuleTile","hidden","SolveHandButton","Vue","created","tilesCount","Options","components","__exports__","role","onClick","args","solveWaitTiles","isSolving","_createCommentVNode","worker","Worker","URL","SolveHuleTileButton","addEventListener","ev","waitPatterns","data","window","alert","postMessage","JSON","stringify","type","id","tabindex","_hoisted_8","_hoisted_9","_hoisted_10","_component_select_add_tile_mode","_component_display_hidden_hand","_component_display_opend_mianzis","dropHand","_component_tile_image","_normalizeClass","isLargeWidth","_Fragment","_renderList","$event","removeTile","small","imageName","alt","src","require","TileImage","sizeStr","sideStr","side","back","tileColor","tileNumber","optionStr","props","required","default","Boolean","DisplayHiddenHand","handleResize","browserWidth","innerWidth","esc","largeWidthBreakpoints","dispatch","DisplayOpendMianzis","hule","for","_hoisted_11","_hoisted_12","_hoisted_13","_withDirectives","name","value","checkdAddTileMode","checked","_vModelRadio","hulu","huluWithAngang","SelectAddTileMode","watch","HandDisplay","xmlns","width","height","fill","viewBox","showAlert","_toDisplayString","alertMessage","displayTiles","tileCol2","tileCol1","idx","addTile","PickupTileArea","allTiles","compareByNumber","handTile","sameTile","mediumBreakpoints","_component_solved_hand_combination_display","_component_solved_hule_tile_display","displayMode","SolvedHandCombinationDisplay","_component_display_mianzi","waitTiles","turnOnHuleTileFilter","turnOffHuleTileFilter","filterButtonMessage","solvedHuleTiles","hulePattern","filterMode","isContainedHuleTile","filterTile","showColor","idxT","formStrings","_mianzi","mianziKind","displayColor","DisplayMianzi","SolvedHuleTileDisplay","waitUniqTiles","pattern","getUid","uid","SolvedHandView","GalaxyMahjong","App","app","createApp","use","mount","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","resolve","module","exports","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","getter","__esModule","definition","defineProperty","enumerable","get","u","chunkId","globalThis","Function","obj","prop","hasOwnProperty","call","toStringTag","document","baseURI","self","location","installedChunks","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","bind","__webpack_exports__"],"sourceRoot":""}